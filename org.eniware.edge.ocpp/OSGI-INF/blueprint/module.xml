<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	
	<!-- Configuration -->
	
	<osgix:cm-properties id="cfg" persistent-id="org.eniware.edge.ocpp">
		<beans:prop key="purgeExpiredJob.cronExpression">5 15 3 * * ?</beans:prop>
		<beans:prop key="purgeExpiredJob.minPurgeExpiredAuthorizationDays">1</beans:prop>
	</osgix:cm-properties>
	
	<ctx:property-placeholder properties-ref="cfg"/>
	
	<!-- Support -->

	<bean id="eventAdmin" class="org.eniware.util.DynamicServiceTracker">
		<property name="bundleContext" ref="bundleContext"/>
		<property name="serviceClassName" value="org.osgi.service.event.EventAdmin"/>
	</bean>

	<bean id="identityService" class="org.eniware.util.DynamicServiceTracker">
		<property name="bundleContext" ref="bundleContext"/>
		<property name="serviceClassName" value="org.eniware.edge.IdentityService"/>
	</bean>

	<bean id="pkiService" class="org.eniware.util.DynamicServiceTracker">
		<property name="bundleContext" ref="bundleContext"/>
		<property name="serviceClassName" value="org.eniware.edge.IdentityService"/>
	</bean>

	<reference id="scheduler" interface="org.quartz.Scheduler" filter="(function=Edge)"/>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames" value="org.eniware.edge.ocpp.impl.ConfigurableCentralSystemServiceFactory"/>
	</bean>
	
	<bean id="settingsFactory" class="org.eniware.edge.settings.support.BasicSettingSpecifierProviderFactory">
		<property name="displayName" value="OCPP Central System"/>
		<property name="factoryUID" value="org.eniware.edge.ocpp.central"/>
		<property name="messageSource" ref="messageSource"/>
	</bean>
	
	<reference id="dataSource" interface="javax.sql.DataSource" filter="(db=Edge)"/>
	
	<bean id="authDao" class="org.eniware.edge.ocpp.dao.JdbcAuthorizationDao" init-method="init">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<reference id="settingDao" interface="org.eniware.edge.dao.SettingDao"/>
	
	<bean id="chargeConfigurationDao" class="org.eniware.edge.ocpp.dao.SettingsChargeConfigurationDao">
		<argument ref="settingDao"/>
		<argument ref="eventAdmin"/>
	</bean>

	<bean id="chargeSessionDao" class="org.eniware.edge.ocpp.dao.JdbcChargeSessionDao" init-method="init">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="socketDao" class="org.eniware.edge.ocpp.dao.JdbcSocketDao" init-method="init">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- Published Services -->
	
	<service ref="authDao" interface="org.eniware.edge.ocpp.AuthorizationDao"/>
	
	<service ref="chargeConfigurationDao" interface="org.eniware.edge.ocpp.ChargeConfigurationDao"/>

	<service ref="chargeSessionDao" interface="org.eniware.edge.ocpp.ChargeSessionDao"/>

	<service ref="socketDao" interface="org.eniware.edge.ocpp.SocketDao"/>

	<service ref="settingsFactory" interface="org.eniware.edge.settings.SettingSpecifierProviderFactory"/>
	
	<osgix:managed-service-factory factory-pid="org.eniware.edge.ocpp.central" autowire-on-update="true">
		<osgix:interfaces>
			<beans:value>org.eniware.edge.ocpp.CentralSystemServiceFactory</beans:value>
			<beans:value>org.eniware.edge.settings.SettingSpecifierProvider</beans:value>
			<beans:value>org.osgi.service.event.EventHandler</beans:value>
		</osgix:interfaces>
		<osgix:service-properties>
			<beans:entry key="settingPid" value="org.eniware.edge.ocpp.central"/>
			<beans:entry key="#{T(org.osgi.service.event.EventConstants).EVENT_TOPIC}">
				<beans:array value-type="java.lang.String">
					<beans:value>#{T(org.eniware.edge.ocpp.ChargeConfigurationDao).EVENT_TOPIC_CHARGE_CONFIGURATION_UPDATED}</beans:value>
				</beans:array>
			</beans:entry>
		</osgix:service-properties>
		<bean class="org.eniware.edge.ocpp.impl.ConfigurableCentralSystemServiceFactory" init-method="startup" destroy-method="shutdown">
			<property name="chargeConfigurationDao" ref="chargeConfigurationDao"/>
			<property name="messageSource" ref="messageSource"/>
			<property name="identityService" ref="identityService"/>
			<property name="scheduler" ref="scheduler"/>
			<property name="version" value="#{bundleContext.bundle.version}"/>
		</bean>
	</osgix:managed-service-factory>
	
	<bean id="jobMessageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>org.eniware.edge.ocpp.dao.Job</value>
			</list>
		</property>
	</bean>
	
	<bean id="purgeExpiredAuthorizationsJob" class="org.eniware.edge.job.SimpleTriggerAndJobDetail">
		<property name="trigger">
			<bean class="org.eniware.edge.job.RandomizedCronTriggerFactoryBean">
				<property name="name" value="purgeExpiredAuthorizationsTrigger"/>
				<property name="cronExpression" value="${purgeExpiredJob.cronExpression}"/>
				<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING"/>
				<property name="randomSecond" value="true"/>
			</bean>
		</property>
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="name" value="purgeExpiredAuthorizationsJob"/>
				<property name="jobClass" value="org.eniware.edge.ocpp.dao.PurgeExpiredAuthorizationsJob"/>
				<property name="jobDataAsMap">
					<map>
						<entry key="authorizationDao" value-ref="authDao"/>
						<entry key="minPurgeExpiredAuthorizationDays" 
							value="#{T(java.lang.Integer).valueOf(@cfg['purgeExpiredJob.minPurgeExpiredAuthorizationDays'])}"/>
					</map>
				</property>
			</bean>
		</property>
		<property name="messageSource" ref="jobMessageSource"/>
	</bean>
	
	<service ref="purgeExpiredAuthorizationsJob" interface="org.eniware.edge.job.TriggerAndJobDetail"/>
	
</blueprint>
