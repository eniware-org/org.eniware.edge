<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_idatsOjmEeilbsvZjylwTQ" name="org_eniware_edge">
    <eAnnotations xmi:id="_i6E0gOjmEeilbsvZjylwTQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_i6E0gejmEeilbsvZjylwTQ" source="codegen">
        <details xmi:id="_i6E0gujmEeilbsvZjylwTQ" key="codegenDirectory" value="/org.eniware.edge/src"/>
        <details xmi:id="_ju3HcOjmEeilbsvZjylwTQ" key="AssociatedSourceCode" value="/org.eniware.edge/src/org/eniware/edge/support/BasicBeanConfiguration.java;2477434781/1;/org.eniware.edge/src/org/eniware/edge/support/UnicodeReader.java;3445451197/1;/org.eniware.edge/src/org/eniware/edge/support/KeyValuePair.java;2857352238/1;/org.eniware.edge/src/org/eniware/edge/support/HttpClientSupport.java;1432639545/1;/org.eniware.edge/src/org/eniware/edge/support/JsonHttpClientSupport.java;3937809313/1;/org.eniware.edge/src/org/eniware/edge/support/DatumDataSourceSupport.java;2194039243/1;/org.eniware.edge/src/org/eniware/edge/support/LocationDatumDataSource.java;1756468786/1;/org.eniware.edge/src/org/eniware/edge/support/SerialPortBean.java;111063813/1;/org.eniware.edge/src/org/eniware/edge/support/SerialPortBeanParameters.java;1557729685/1;/org.eniware.edge/src/org/eniware/edge/support/DataCollectorSerialPortBeanParameters.java;494556090/1;/org.eniware.edge/src/org/eniware/edge/support/XmlServiceSupport.java;157256615/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_jbth8OjmEeilbsvZjylwTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_jbth8ejmEeilbsvZjylwTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_jbth8ujmEeilbsvZjylwTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_jbth8-jmEeilbsvZjylwTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_jbth9OjmEeilbsvZjylwTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_jbuJAOjmEeilbsvZjylwTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_jbuJAejmEeilbsvZjylwTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_jbuJAujmEeilbsvZjylwTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_jbuJA-jmEeilbsvZjylwTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_jZ8nYOjmEeilbsvZjylwTQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_jZ9OcOjmEeilbsvZjylwTQ" name="eniware">
        <packagedElement xmi:type="uml:Package" xmi:id="_jZ9OcejmEeilbsvZjylwTQ" name="edge">
          <packagedElement xmi:type="uml:Package" xmi:id="_jaARwOjmEeilbsvZjylwTQ" name="util">
            <packagedElement xmi:type="uml:Interface" xmi:id="_jfz-0OjmEeilbsvZjylwTQ" name="BeanConfiguration"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_jgiXkejmEeilbsvZjylwTQ" name="PrefixedMessageSource"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_jaBf4OjmEeilbsvZjylwTQ" name="support">
            <packagedElement xmi:type="uml:Class" xmi:id="_jbsT0OjmEeilbsvZjylwTQ" name="BasicBeanConfiguration">
              <ownedComment xmi:id="_jjtAUOjmEeilbsvZjylwTQ">
                <body>Basic implementation of {@link BeanConfiguration}.

&lt;p>The configurable properties of this class are:&lt;/p>

&lt;dl class=&quot;class-properties&quot;>
  &lt;dt>attributes&lt;/dt>
  &lt;dd>A Map of attributes for the configuration.&lt;/dd>
  
  &lt;dt>configuration&lt;/dt>
  &lt;dd>A Map of bean property values.&lt;/dd>
  
  &lt;dt>ordering&lt;/dt>
  &lt;dd>An ordering value. Defaults to {@link #DEFAULT_ORDERING}.&lt;/dd>
&lt;/dl>

@version $Id$</body>
              </ownedComment>
              <ownedAttribute xmi:id="_jinbMOjmEeilbsvZjylwTQ" name="DEFAULT_ORDERING" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jinbMejmEeilbsvZjylwTQ" value="Integer.valueOf(0)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jinbMujmEeilbsvZjylwTQ" name="configuration" type="_jheLsejmEeilbsvZjylwTQ" association="_jj5NkOjmEeilbsvZjylwTQ">
                <qualifier xmi:id="_jioCQOjmEeilbsvZjylwTQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </qualifier>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jioCQejmEeilbsvZjylwTQ" name="attributes" type="_jheLsejmEeilbsvZjylwTQ" association="_jj50oejmEeilbsvZjylwTQ">
                <qualifier xmi:id="_jioCQujmEeilbsvZjylwTQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </qualifier>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jiopUOjmEeilbsvZjylwTQ" name="ordering">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jiopUejmEeilbsvZjylwTQ" value="DEFAULT_ORDERING"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_jhdkoOjmEeilbsvZjylwTQ" client="_jbsT0OjmEeilbsvZjylwTQ" supplier="_jfz-0OjmEeilbsvZjylwTQ" contract="_jfz-0OjmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jbvXIOjmEeilbsvZjylwTQ" name="UnicodeReader">
              <ownedComment xmi:id="_jjtnYOjmEeilbsvZjylwTQ">
                <body>Reader that can detect a Unicode BOM.

Adapted from Google Data API.

@version $Revision$</body>
              </ownedComment>
              <generalization xmi:id="_jhgn8OjmEeilbsvZjylwTQ" general="_jf3CIujmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jiopUujmEeilbsvZjylwTQ" name="BOM_SIZE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jiopU-jmEeilbsvZjylwTQ" value="4"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jipQYOjmEeilbsvZjylwTQ" name="reader" visibility="private" isLeaf="true" type="_jf2bEejmEeilbsvZjylwTQ" isReadOnly="true" association="_jj6bsOjmEeilbsvZjylwTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjK00OjmEeilbsvZjylwTQ" name="UnicodeReader" specification="_jhgA4OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjK00ejmEeilbsvZjylwTQ" name="in" type="_jf10AejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjK00ujmEeilbsvZjylwTQ" name="defaultEncoding">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjK00-jmEeilbsvZjylwTQ" type="_jbvXIOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>byte bom[] = new byte[BOM_SIZE];
     String encoding;
     int unread;
     PushbackInputStream pushbackStream = new PushbackInputStream(in, BOM_SIZE);
     int n = pushbackStream.read(bom, 0, bom.length);

     // Read ahead four bytes and check for BOM marks.
     if ((bom[0] == (byte) 0xEF) &amp;&amp; (bom[1] == (byte) 0xBB) &amp;&amp; (bom[2] == (byte) 0xBF)) {
         encoding = &quot;UTF-8&quot;;
         unread = n - 3;
     } else if ((bom[0] == (byte) 0xFE) &amp;&amp; (bom[1] == (byte) 0xFF)) {
         encoding = &quot;UTF-16BE&quot;;
         unread = n - 2;
     } else if ((bom[0] == (byte) 0xFF) &amp;&amp; (bom[1] == (byte) 0xFE)) {
         encoding = &quot;UTF-16LE&quot;;
         unread = n - 2;
     } else if ((bom[0] == (byte) 0x00) &amp;&amp; (bom[1] == (byte) 0x00) &amp;&amp; (bom[2] == (byte) 0xFE) &amp;&amp; (bom[3] == (byte) 0xFF)) {
         encoding = &quot;UTF-32BE&quot;;
         unread = n - 4;
     } else if ((bom[0] == (byte) 0xFF) &amp;&amp; (bom[1] == (byte) 0xFE) &amp;&amp; (bom[2] == (byte) 0x00) &amp;&amp; (bom[3] == (byte) 0x00)) {
         encoding = &quot;UTF-32LE&quot;;
         unread = n - 4;
     } else {
         encoding = defaultEncoding;
         unread = n;
     }

     // Unread bytes if necessary and skip BOM marks.
     if (unread > 0) {
         pushbackStream.unread(bom, (n - unread), unread);
     } else if (unread &lt; -1) {
         pushbackStream.unread(bom, 0, 0);
     }

     // Use given encoding.
     if (encoding == null) {
         reader = new InputStreamReader(pushbackStream);
     } else {
         reader = new InputStreamReader(pushbackStream, encoding);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjLb4OjmEeilbsvZjylwTQ" name="getEncoding" specification="_jbwlQOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjLb4ejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return reader.getEncoding();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjLb4ujmEeilbsvZjylwTQ" name="read" specification="_jbwlQujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjLb4-jmEeilbsvZjylwTQ" name="cbuf">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjLb5OjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjLb5ejmEeilbsvZjylwTQ" name="off">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjLb5ujmEeilbsvZjylwTQ" name="len">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjLb5-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return reader.read(cbuf, off, len);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjLb6OjmEeilbsvZjylwTQ" name="close" specification="_jbxzYOjmEeilbsvZjylwTQ">
                <language>java</language>
                <body>reader.close();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jbwlQOjmEeilbsvZjylwTQ" name="getEncoding" method="_jjLb4OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jbwlQejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jbwlQujmEeilbsvZjylwTQ" name="read" method="_jjLb4ujmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jbwlQ-jmEeilbsvZjylwTQ" name="cbuf">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jbxMU-jmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jbxMUOjmEeilbsvZjylwTQ" name="off">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jbxMUejmEeilbsvZjylwTQ" name="len">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jbxMUujmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jbxzYOjmEeilbsvZjylwTQ" name="close" method="_jjLb6OjmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ"/>
              <ownedOperation xmi:id="_jhgA4OjmEeilbsvZjylwTQ" name="UnicodeReader" method="_jjK00OjmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <eAnnotations xmi:id="_jhgA4-jmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_jhgA5OjmEeilbsvZjylwTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_jjtnYejmEeilbsvZjylwTQ">
                  <body>Construct UnicodeReader.
     * 
     * @param in Input stream.
     * @param defaultEncoding Default encoding to be used if BOM is not found,
     * or &lt;code>null&lt;/code> to use system default encoding.
     * @throws IOException If an I/O error occurs.</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhgA4ejmEeilbsvZjylwTQ" name="in" type="_jf10AejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhgA4ujmEeilbsvZjylwTQ" name="defaultEncoding">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhgA5ejmEeilbsvZjylwTQ" type="_jbvXIOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jbzBgOjmEeilbsvZjylwTQ" name="KeyValuePair">
              <ownedComment xmi:id="_jjtnYujmEeilbsvZjylwTQ">
                <body>A key and value pair.

@version $Id$</body>
              </ownedComment>
              <ownedAttribute xmi:id="_jip3cOjmEeilbsvZjylwTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jip3cejmEeilbsvZjylwTQ" value="-8143671046909870551L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jip3cujmEeilbsvZjylwTQ" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jiqegOjmEeilbsvZjylwTQ" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_jhgn8ejmEeilbsvZjylwTQ" client="_jbzBgOjmEeilbsvZjylwTQ" supplier="_jf43UOjmEeilbsvZjylwTQ" contract="_jf43UOjmEeilbsvZjylwTQ"/>
              <interfaceRealization xmi:id="_jhh2EejmEeilbsvZjylwTQ" client="_jbzBgOjmEeilbsvZjylwTQ" supplier="_jhhPAOjmEeilbsvZjylwTQ" contract="_jhhPAOjmEeilbsvZjylwTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjMC8OjmEeilbsvZjylwTQ" name="KeyValuePair" specification="_jbzokOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjMC8ejmEeilbsvZjylwTQ" type="_jbzBgOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjMC8ujmEeilbsvZjylwTQ" name="KeyValuePair" specification="_jb0PoOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjMC8-jmEeilbsvZjylwTQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjMC9OjmEeilbsvZjylwTQ" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjMC9ejmEeilbsvZjylwTQ" type="_jbzBgOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>super();
		this.key = key;
		this.value = value;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjMC9ujmEeilbsvZjylwTQ" name="compareTo" specification="_jf5eYejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjMC9-jmEeilbsvZjylwTQ" name="o" type="_jbzBgOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjMC-OjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( key == null ) {
			return 1;
		}
		return key.compareTo(o.key);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjMC-ejmEeilbsvZjylwTQ" name="toString" specification="_jb02sOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjMC-ujmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return &quot;KeyValuePair{&quot;+key+'='+value+'}';
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjMqAOjmEeilbsvZjylwTQ" name="hashCode" specification="_jb1dw-jmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjMqAejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>final int prime = 31;
		int result = 1;
		result = prime * result + ((key == null) ? 0 : key.hashCode());
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjMqAujmEeilbsvZjylwTQ" name="equals" specification="_jhidIOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjMqA-jmEeilbsvZjylwTQ" name="obj" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjMqBOjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( this == obj ) {
			return true;
		}
		if ( obj == null ) {
			return false;
		}
		if ( getClass() != obj.getClass() ) {
			return false;
		}
		KeyValuePair other = (KeyValuePair) obj;
		if ( key == null ) {
			if ( other.key != null ) {
				return false;
			}
		} else if ( !key.equals(other.key) ) {
			return false;
		}
		return true;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jbzokOjmEeilbsvZjylwTQ" name="KeyValuePair" method="_jjMC8OjmEeilbsvZjylwTQ">
                <eAnnotations xmi:id="_jbzokejmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_jbzokujmEeilbsvZjylwTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_jbzok-jmEeilbsvZjylwTQ" type="_jbzBgOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jb0PoOjmEeilbsvZjylwTQ" name="KeyValuePair" method="_jjMC8ujmEeilbsvZjylwTQ">
                <eAnnotations xmi:id="_jb0Po-jmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_jb0PpOjmEeilbsvZjylwTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_jb0PoejmEeilbsvZjylwTQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jb0PoujmEeilbsvZjylwTQ" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jb0PpejmEeilbsvZjylwTQ" type="_jbzBgOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jb02sOjmEeilbsvZjylwTQ" name="toString" method="_jjMC-ejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jb02sejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jb1dw-jmEeilbsvZjylwTQ" name="hashCode" method="_jjMqAOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jb1dxOjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jf5eYejmEeilbsvZjylwTQ" name="compareTo" method="_jjMC9ujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jf5eYujmEeilbsvZjylwTQ" name="o" type="_jbzBgOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jf6FcOjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jhidIOjmEeilbsvZjylwTQ" name="equals" method="_jjMqAujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jhidIejmEeilbsvZjylwTQ" name="obj" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhidIujmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jb3S8OjmEeilbsvZjylwTQ" name="HttpClientSupport" isAbstract="true">
              <ownedComment xmi:id="_jjtnY-jmEeilbsvZjylwTQ">
                <body>Supporting methods for HTTP client operations.

@version 1.1</body>
              </ownedComment>
              <ownedAttribute xmi:id="_jiqegejmEeilbsvZjylwTQ" name="ACCEPT_TEXT" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jirFkOjmEeilbsvZjylwTQ" value="&quot;text/*&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jirFkejmEeilbsvZjylwTQ" name="ACCEPT_JSON" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jirFkujmEeilbsvZjylwTQ" value="&quot;application/json,text/json&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jirFk-jmEeilbsvZjylwTQ" name="DEFAULT_CONNECTION_TIMEOUT" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jirsoOjmEeilbsvZjylwTQ" value="15000"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jirsoejmEeilbsvZjylwTQ" name="HTTP_METHOD_GET" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jirsoujmEeilbsvZjylwTQ" value="&quot;GET&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jirso-jmEeilbsvZjylwTQ" name="HTTP_METHOD_POST" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jirspOjmEeilbsvZjylwTQ" value="&quot;POST&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jisTsOjmEeilbsvZjylwTQ" name="connectionTimeout">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jisTsejmEeilbsvZjylwTQ" value="DEFAULT_CONNECTION_TIMEOUT"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jisTsujmEeilbsvZjylwTQ" name="identityService" type="_jgBaMejmEeilbsvZjylwTQ" association="_jj7CwejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jisTs-jmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jis6wOjmEeilbsvZjylwTQ" name="sslService" type="_jgD2cejmEeilbsvZjylwTQ" association="_jj7p0OjmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jith0OjmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jith0ejmEeilbsvZjylwTQ" name="uid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jith0ujmEeilbsvZjylwTQ" name="groupUID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jiuI4OjmEeilbsvZjylwTQ" name="log" visibility="protected" isLeaf="true" type="_jgCoUejmEeilbsvZjylwTQ" isReadOnly="true" association="_jj7p0-jmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jiuI4ejmEeilbsvZjylwTQ" value="LoggerFactory.getLogger(getClass())"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjMqBejmEeilbsvZjylwTQ" name="getInputStreamFromURLConnection" specification="_jhkSUOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjMqBujmEeilbsvZjylwTQ" name="conn" type="_jf-W4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjMqB-jmEeilbsvZjylwTQ" type="_jf10AejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>String enc = conn.getContentEncoding();
		String type = conn.getContentType();

		if ( conn instanceof HttpURLConnection ) {
			HttpURLConnection httpConn = (HttpURLConnection) conn;
			if ( httpConn.getResponseCode() &lt; 200 || httpConn.getResponseCode() > 299 ) {
				log.info(&quot;Non-200 HTTP response from {}: {}&quot;, conn.getURL(), httpConn.getResponseCode());
			}
		}

		log.trace(&quot;Got content type [{}] encoded as [{}]&quot;, type, enc);

		InputStream is = conn.getInputStream();
		if ( &quot;gzip&quot;.equalsIgnoreCase(enc) ) {
			is = new GZIPInputStream(is);
		} else if ( &quot;deflate&quot;.equalsIgnoreCase(&quot;enc&quot;) ) {
			is = new DeflaterInputStream(is);
		}
		return is;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjMqCOjmEeilbsvZjylwTQ" name="getUnicodeReaderFromURLConnection" specification="_jhk5YOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjMqCejmEeilbsvZjylwTQ" name="conn" type="_jf-W4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjMqCujmEeilbsvZjylwTQ" type="_jf3CIujmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>return new BufferedReader(new UnicodeReader(getInputStreamFromURLConnection(conn), null));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjNREOjmEeilbsvZjylwTQ" name="getURLConnection" specification="_jb5IIOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjNREejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjNREujmEeilbsvZjylwTQ" name="httpMethod">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjNRE-jmEeilbsvZjylwTQ" type="_jf-W4OjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>return getURLConnection(url, httpMethod, &quot;text/*&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjNRFOjmEeilbsvZjylwTQ" name="getURLConnection" specification="_jb5vMOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjNRFejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjNRFujmEeilbsvZjylwTQ" name="httpMethod">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjNRF-jmEeilbsvZjylwTQ" name="accept">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjNRGOjmEeilbsvZjylwTQ" type="_jf-W4OjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>URL connUrl = new URL(url);
		URLConnection conn = connUrl.openConnection();
		if ( conn instanceof HttpURLConnection ) {
			HttpURLConnection hConn = (HttpURLConnection) conn;
			hConn.setRequestMethod(httpMethod);
		}
		if ( sslService != null &amp;&amp; conn instanceof HttpsURLConnection ) {
			SSLService service = sslService.service();
			if ( service != null ) {
				SSLSocketFactory factory = service.getEniwareInSocketFactory();
				if ( factory != null ) {
					HttpsURLConnection hConn = (HttpsURLConnection) conn;
					hConn.setSSLSocketFactory(factory);
				}
			}
		}
		conn.setRequestProperty(&quot;Accept&quot;, accept);
		conn.setRequestProperty(&quot;Accept-Encoding&quot;, &quot;gzip,deflate&quot;);
		conn.setDoInput(true);
		conn.setDoOutput(HTTP_METHOD_POST.equalsIgnoreCase(httpMethod));
		conn.setConnectTimeout(this.connectionTimeout);
		conn.setReadTimeout(connectionTimeout);
		return conn;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjNRGejmEeilbsvZjylwTQ" name="appendXWWWFormURLEncodedValue" specification="_jhmHgejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjNRGujmEeilbsvZjylwTQ" name="buf" type="_jhlgcujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjNRG-jmEeilbsvZjylwTQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjNRHOjmEeilbsvZjylwTQ" name="value" type="_jheLsejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>if ( value == null ) {
			return;
		}
		if ( buf.length() > 0 ) {
			buf.append('&amp;');
		}
		try {
			buf.append(URLEncoder.encode(key, &quot;UTF-8&quot;)).append('=')
					.append(URLEncoder.encode(value.toString(), &quot;UTF-8&quot;));
		} catch ( UnsupportedEncodingException e ) {
			// should not get here ever
			throw new RuntimeException(e);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjN4IOjmEeilbsvZjylwTQ" name="xWWWFormURLEncoded" specification="_jhmukujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjN4IejmEeilbsvZjylwTQ" name="data" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjN4IujmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( data == null || data.size() &lt; 0 ) {
			return &quot;&quot;;
		}
		StringBuilder buf = new StringBuilder();
		for ( Map.Entry&lt;String, ?> me : data.entrySet() ) {
			String key;
			try {
				key = URLEncoder.encode(me.getKey(), &quot;UTF-8&quot;);
			} catch ( UnsupportedEncodingException e ) {
				// should not get here ever
				throw new RuntimeException(e);
			}
			Object val = me.getValue();
			if ( val instanceof Collection&lt;?> ) {
				for ( Object colVal : (Collection&lt;?>) val ) {
					appendXWWWFormURLEncodedValue(buf, key, colVal);
				}
			} else if ( val.getClass().isArray() ) {
				for ( Object arrayVal : (Object[]) val ) {
					appendXWWWFormURLEncodedValue(buf, key, arrayVal);
				}
			} else {
				appendXWWWFormURLEncodedValue(buf, key, val);
			}
		}
		return buf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjN4I-jmEeilbsvZjylwTQ" name="postXWWWFormURLEncodedData" specification="_jhn8sOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjN4JOjmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjN4JejmEeilbsvZjylwTQ" name="accept">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjN4JujmEeilbsvZjylwTQ" name="data" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjN4J-jmEeilbsvZjylwTQ" type="_jf-W4OjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>URLConnection conn = getURLConnection(url, HTTP_METHOD_POST, accept);
		conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);
		String body = xWWWFormURLEncoded(data);
		log.trace(&quot;Encoded HTTP POST data {} for {} as {}&quot;, data, url, body);
		OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream(), &quot;UTF-8&quot;);
		FileCopyUtils.copy(new StringReader(body), out);
		if ( conn instanceof HttpURLConnection ) {
			HttpURLConnection http = (HttpURLConnection) conn;
			int status = http.getResponseCode();
			if ( status &lt; 200 || status > 299 ) {
				throw new RuntimeException(&quot;HTTP result status not in the 200-299 range: &quot;
						+ http.getResponseCode() + &quot; &quot; + http.getResponseMessage());
			}
		}
		return conn;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjN4KOjmEeilbsvZjylwTQ" name="postXWWWFormURLEncodedDataForString" specification="_jhpK0OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjN4KejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjN4KujmEeilbsvZjylwTQ" name="data" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjN4K-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>URLConnection conn = postXWWWFormURLEncodedData(url, &quot;text/*, application/json&quot;, data);
		return FileCopyUtils.copyToString(getUnicodeReaderFromURLConnection(conn));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjN4LOjmEeilbsvZjylwTQ" name="getUID" specification="_jb7kYOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjN4LejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getUid();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jb5IIOjmEeilbsvZjylwTQ" name="getURLConnection" visibility="protected" method="_jjNREOjmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjuOcOjmEeilbsvZjylwTQ">
                  <body>Get a URLConnection for a specific URL and HTTP method.
	 * 
	 * &lt;p>
	 * This defaults to the {@link #ACCEPT_TEXT} accept value.
	 * &lt;/p>
	 * 
	 * @param url
	 *        the URL to connect to
	 * @param httpMethod
	 *        the HTTP method
	 * @return the URLConnection
	 * @throws IOException
	 *         if any IO error occurs
	 * @see #getURLConnection(String, String, String)</body>
                </ownedComment>
                <ownedParameter xmi:id="_jb5IIejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jb5IIujmEeilbsvZjylwTQ" name="httpMethod">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhlgcOjmEeilbsvZjylwTQ" type="_jf-W4OjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jb5vMOjmEeilbsvZjylwTQ" name="getURLConnection" visibility="protected" method="_jjNRFOjmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjuOcejmEeilbsvZjylwTQ">
                  <body>Get a URLConnection for a specific URL and HTTP method.
	 * 
	 * &lt;p>
	 * If the httpMethod equals {@code POST} then the connection's
	 * {@code doOutput} property will be set to &lt;em>true&lt;/em>, otherwise it will
	 * be set to &lt;em>false&lt;/em>. The {@code doInput} property is always set to
	 * &lt;em>true&lt;/em>.
	 * &lt;/p>
	 * 
	 * &lt;p>
	 * This method also sets up the request property
	 * {@code Accept-Encoding: gzip,deflate} so the response can be compressed.
	 * The {@link #getInputSourceFromURLConnection(URLConnection)} automatically
	 * handles compressed responses.
	 * &lt;/p>
	 * 
	 * &lt;p>
	 * If the {@link #getSslService()} property is configured and the URL
	 * represents an HTTPS connection, then that factory will be used to for the
	 * connection.
	 * &lt;/p>
	 * 
	 * @param url
	 *        the URL to connect to
	 * @param httpMethod
	 *        the HTTP method
	 * @param accept
	 *        the HTTP Accept header value
	 * @return the URLConnection
	 * @throws IOException
	 *         if any IO error occurs</body>
                </ownedComment>
                <ownedParameter xmi:id="_jb6WQOjmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jb6WQejmEeilbsvZjylwTQ" name="httpMethod">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jb6WQujmEeilbsvZjylwTQ" name="accept">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhlgcejmEeilbsvZjylwTQ" type="_jf-W4OjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jb7kYOjmEeilbsvZjylwTQ" name="getUID" method="_jjN4LOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jb7kYejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jhkSUOjmEeilbsvZjylwTQ" name="getInputStreamFromURLConnection" visibility="protected" method="_jjMqBejmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjtnZOjmEeilbsvZjylwTQ">
                  <body>Get an InputStream from a URLConnection response, handling compression.
	 * 
	 * &lt;p>
	 * This method handles decompressing the response if the encoding is set to
	 * {@code gzip} or {@code deflate}.
	 * &lt;/p>
	 * 
	 * @param conn
	 *        the URLConnection
	 * @return the InputStream
	 * @throws IOException
	 *         if any IO error occurs</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhkSUejmEeilbsvZjylwTQ" name="conn" type="_jf-W4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhkSUujmEeilbsvZjylwTQ" type="_jf10AejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhk5YOjmEeilbsvZjylwTQ" name="getUnicodeReaderFromURLConnection" visibility="protected" method="_jjMqCOjmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjtnZejmEeilbsvZjylwTQ">
                  <body>Get a Reader for a Unicode encoded URL connection response.
	 * 
	 * &lt;p>
	 * This calls {@link #getInputStreamFromURLConnection(URLConnection)} so
	 * compressed responses are handled appropriately.
	 * &lt;/p>
	 * 
	 * @param conn
	 *        the URLConnection
	 * @return the Reader
	 * @throws IOException
	 *         if an IO error occurs</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhk5YejmEeilbsvZjylwTQ" name="conn" type="_jf-W4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhk5YujmEeilbsvZjylwTQ" type="_jf3CIujmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhmHgejmEeilbsvZjylwTQ" name="appendXWWWFormURLEncodedValue" visibility="protected" method="_jjNRGejmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjuOcujmEeilbsvZjylwTQ">
                  <body>Append a URL-escaped key/value pair to a string buffer.
	 * 
	 * @param buf
	 * @param key
	 * @param value</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhmHgujmEeilbsvZjylwTQ" name="buf" type="_jhlgcujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhmukOjmEeilbsvZjylwTQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhmukejmEeilbsvZjylwTQ" name="value" type="_jheLsejmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhmukujmEeilbsvZjylwTQ" name="xWWWFormURLEncoded" visibility="protected" method="_jjN4IOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjuOc-jmEeilbsvZjylwTQ">
                  <body>Encode a map of data into a string suitable for posting to a web server
	 * as the content type {@code application/x-www-form-urlencoded}. Arrays and
	 * Collections of values are supported as well.
	 * 
	 * @param data
	 *        the map of data to encode
	 * @return the encoded data, or an empty string if nothing to encode</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhmuk-jmEeilbsvZjylwTQ" name="data" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhnVoOjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jhn8sOjmEeilbsvZjylwTQ" name="postXWWWFormURLEncodedData" visibility="protected" method="_jjN4I-jmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjuOdOjmEeilbsvZjylwTQ">
                  <body>HTTP POST data as {@code application/x-www-form-urlencoded} (e.g. a web
	 * form) to a URL.
	 * 
	 * @param url
	 *        the URL to post to
	 * @param accept
	 *        the value to use for the Accept HTTP header
	 * @param data
	 *        the data to encode and send as the body of the HTTP POST
	 * @return the URLConnection after the post data has been sent
	 * @throws IOException
	 *         if any IO error occurs
	 * @throws RuntimeException
	 *         if the HTTP response code is not within the 200 - 299 range</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhn8sejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhn8sujmEeilbsvZjylwTQ" name="accept">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhn8s-jmEeilbsvZjylwTQ" name="data" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhn8tOjmEeilbsvZjylwTQ" type="_jf-W4OjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhpK0OjmEeilbsvZjylwTQ" name="postXWWWFormURLEncodedDataForString" visibility="protected" method="_jjN4KOjmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjuOdejmEeilbsvZjylwTQ">
                  <body>HTTP POST data as {@code application/x-www-form-urlencoded} (e.g. a web
	 * form) to a URL and return the response body as a string.
	 * 
	 * @param url
	 *        the URL to post to
	 * @param data
	 *        the data to encode and send as the body of the HTTP POST
	 * @return the response body as a String
	 * @throws IOException
	 *         if any IO error occurs
	 * @throws RuntimeException
	 *         if the HTTP response code is not within the 200 - 299 range
	 * @see #postXWWWFormURLEncodedData(String, String, Map)</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhpK0ejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhpK0ujmEeilbsvZjylwTQ" name="data" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhpK0-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jb_10OjmEeilbsvZjylwTQ" name="JsonHttpClientSupport" isAbstract="true">
              <ownedComment xmi:id="_jjuOdujmEeilbsvZjylwTQ">
                <body>An abstract class to support HTTP based services that use JSON.

&lt;p>
The configurable properties of this class are:
&lt;/p>

&lt;dl class=&quot;class-properties&quot;>
&lt;dt>compress&lt;/dt>
&lt;dd>Flag to compress the HTTP body content, defaults to &lt;em>false&lt;/em>.&lt;/dd>

&lt;dt>objectMapper&lt;/dt>
&lt;dd>The {@link ObjectMapper} to marshall/unmarshall objects to/from JSON
with.&lt;/dd>
&lt;/dl>

@version 1.1</body>
              </ownedComment>
              <generalization xmi:id="_jgNncOjmEeilbsvZjylwTQ" general="_jb3S8OjmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jiuv8OjmEeilbsvZjylwTQ" name="JSON_MIME_TYPE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jiuv8ejmEeilbsvZjylwTQ" value="&quot;application/json&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jiuv8ujmEeilbsvZjylwTQ" name="objectMapper" isLeaf="true" type="_jgMZUejmEeilbsvZjylwTQ" association="_jj8Q4ejmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jivXAOjmEeilbsvZjylwTQ" name="compress" isLeaf="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jivXAejmEeilbsvZjylwTQ" value="false"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjOfMOjmEeilbsvZjylwTQ" name="doJson" specification="_jhrAAOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjOfMejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjOfMujmEeilbsvZjylwTQ" name="method">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjOfM-jmEeilbsvZjylwTQ" name="data" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjOfNOjmEeilbsvZjylwTQ" type="_jf10AejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>URLConnection conn = getURLConnection(url, method, JSON_MIME_TYPE);
		if ( data != null ) {
			conn.setRequestProperty(&quot;Content-Type&quot;, JSON_MIME_TYPE + &quot;;charset=UTF-8&quot;);
			if ( compress ) {
				conn.setRequestProperty(&quot;Content-Encoding&quot;, &quot;gzip&quot;);
			}
			OutputStream out = conn.getOutputStream();
			if ( compress ) {
				out = new GZIPOutputStream(out);
			}

			if ( log.isDebugEnabled() ) {
				log.debug(&quot;Posting JSON data: {}&quot;, objectMapper.writerWithDefaultPrettyPrinter()
						.writeValueAsString(data));
			}
			objectMapper.writeValue(out, data);
			out.flush();
			out.close();
		}

		return getInputStreamFromURLConnection(conn);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjOfNejmEeilbsvZjylwTQ" name="jsonGET" specification="_jcBD8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjOfNujmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjOfN-jmEeilbsvZjylwTQ" type="_jf10AejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>return doJson(url, HTTP_METHOD_GET, null);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjPGQOjmEeilbsvZjylwTQ" name="jsonPOST" specification="_jhsOIOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjPGQejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjPGQujmEeilbsvZjylwTQ" name="data" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjPGQ-jmEeilbsvZjylwTQ" type="_jf10AejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>return doJson(url, HTTP_METHOD_POST, data);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjPGROjmEeilbsvZjylwTQ" name="extractResponseData" specification="_jhuDUOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjPGRejmEeilbsvZjylwTQ" name="in" type="_jf10AejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjPGRujmEeilbsvZjylwTQ" name="dataType" type="_jhtcQOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjPGR-jmEeilbsvZjylwTQ" type="_jhs1MOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>try {
			JsonNode root = getObjectMapper().readTree(in);
			if ( root.isObject() ) {
				JsonNode child = root.get(&quot;success&quot;);
				if ( child != null &amp;&amp; child.asBoolean() ) {
					child = root.get(&quot;data&quot;);
					if ( child != null ) {
						return objectMapper.treeToValue(child, dataType);
					}
					log.debug(&quot;Server returned no data for request.&quot;);
					return null;
				}
			}
			throw new RemoteServiceException(&quot;Server response not successful: &quot;
					+ (root.get(&quot;message&quot;) == null ? &quot;(no message)&quot; : root.get(&quot;message&quot;).asText()));
		} finally {
			if ( in != null ) {
				in.close();
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjPGSOjmEeilbsvZjylwTQ" name="extractCollectionResponseData" specification="_jhvRcOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjPGSejmEeilbsvZjylwTQ" name="in" type="_jf10AejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjPGSujmEeilbsvZjylwTQ" name="dataType" type="_jhtcQOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjPGS-jmEeilbsvZjylwTQ" type="_jhs1MOjmEeilbsvZjylwTQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjPGTOjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>try {
			JsonNode root = getObjectMapper().readTree(in);
			if ( root.isObject() ) {
				JsonNode child = root.get(&quot;success&quot;);
				if ( child != null &amp;&amp; child.asBoolean() ) {
					child = root.get(&quot;data&quot;);
					if ( child != null &amp;&amp; child.isArray() ) {
						Iterator&lt;JsonNode> children = child.iterator();
						List&lt;T> result = new ArrayList&lt;T>();
						while ( children.hasNext() ) {
							child = children.next();
							result.add(objectMapper.treeToValue(child, dataType));
						}
						return result;
					}
					log.debug(&quot;Server returned no data for request.&quot;);
					return null;
				}
			}
			throw new RemoteServiceException(
					&quot;Server response not successful: &quot; + root.get(&quot;message&quot;) == null ? &quot;(no message)&quot;
							: root.get(&quot;message&quot;).asText());
		} finally {
			if ( in != null ) {
				in.close();
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjPGTejmEeilbsvZjylwTQ" name="verifyResponseSuccess" specification="_jhxGoOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjPGTujmEeilbsvZjylwTQ" name="in" type="_jf10AejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>try {
			JsonNode root = getObjectMapper().readTree(in);
			if ( root.isObject() ) {
				JsonNode child = root.get(&quot;success&quot;);
				if ( child != null &amp;&amp; child.asBoolean() ) {
					return;
				}
			}
			throw new RemoteServiceException(
					&quot;Server response not successful: &quot; + root.get(&quot;message&quot;) == null ? &quot;(no message)&quot;
							: root.get(&quot;message&quot;).asText());
		} finally {
			if ( in != null ) {
				in.close();
			}
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jcBD8OjmEeilbsvZjylwTQ" name="jsonGET" visibility="protected" isLeaf="true" method="_jjOfNejmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcBD8ejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhrnE-jmEeilbsvZjylwTQ" type="_jf10AejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhrAAOjmEeilbsvZjylwTQ" name="doJson" visibility="protected" isLeaf="true" method="_jjOfMOjmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jhrAAejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhrnEOjmEeilbsvZjylwTQ" name="method">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhrnEejmEeilbsvZjylwTQ" name="data" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhrnEujmEeilbsvZjylwTQ" type="_jf10AejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhsOIOjmEeilbsvZjylwTQ" name="jsonPOST" visibility="protected" isLeaf="true" method="_jjPGQOjmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jhsOIejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jhsOIujmEeilbsvZjylwTQ" name="data" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhsOI-jmEeilbsvZjylwTQ" type="_jf10AejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhuDUOjmEeilbsvZjylwTQ" name="extractResponseData" visibility="protected" method="_jjPGROjmEeilbsvZjylwTQ" raisedException="_jgLLMejmEeilbsvZjylwTQ _jf1M8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jhuDUejmEeilbsvZjylwTQ" name="in" type="_jf10AejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhuDUujmEeilbsvZjylwTQ" name="dataType" type="_jhtcQOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhuDVOjmEeilbsvZjylwTQ" type="_jhs1MOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhvRcOjmEeilbsvZjylwTQ" name="extractCollectionResponseData" visibility="protected" method="_jjPGSOjmEeilbsvZjylwTQ" raisedException="_jgLLMejmEeilbsvZjylwTQ _jf1M8OjmEeilbsvZjylwTQ">
                <eAnnotations xmi:id="_jhv4g-jmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_jhv4hOjmEeilbsvZjylwTQ" key="generic_container"/>
                </eAnnotations>
                <ownedParameter xmi:id="_jhvRcejmEeilbsvZjylwTQ" name="in" type="_jf10AejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhvRcujmEeilbsvZjylwTQ" name="dataType" type="_jhtcQOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhv4gejmEeilbsvZjylwTQ" type="_jhs1MOjmEeilbsvZjylwTQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jhv4gujmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jhxGoOjmEeilbsvZjylwTQ" name="verifyResponseSuccess" visibility="protected" method="_jjPGTejmEeilbsvZjylwTQ" raisedException="_jgLLMejmEeilbsvZjylwTQ _jf1M8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jhxGoejmEeilbsvZjylwTQ" name="in" type="_jf10AejmEeilbsvZjylwTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jcFVYOjmEeilbsvZjylwTQ" name="DatumDataSourceSupport">
              <ownedComment xmi:id="_jju1gOjmEeilbsvZjylwTQ">
                <body>Helper class for {@link org.eniware.edge.DatumDataSource} and
{@link org.eniware.edge.MultiDatumDataSource} implementations to extend.

@version 1.0
@since 1.51</body>
              </ownedComment>
              <ownedAttribute xmi:id="_jiv-EOjmEeilbsvZjylwTQ" name="SOURCE_METADATA_CACHE" visibility="private" isLeaf="true" isStatic="true" type="_jgQqwejmEeilbsvZjylwTQ" isReadOnly="true" association="_jj838ejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jiwlIejmEeilbsvZjylwTQ" value="new ConcurrentHashMap&lt;String, GeneralDatumMetadata>(&#xA;&#x9;&#x9;&#x9;4)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jiwlIujmEeilbsvZjylwTQ" name="uid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jiwlI-jmEeilbsvZjylwTQ" name="groupUID" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jixzQujmEeilbsvZjylwTQ" name="messageSource" type="_jgU8MejmEeilbsvZjylwTQ" association="_jju1gejmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jixzQ-jmEeilbsvZjylwTQ" name="datumMetadataService" visibility="private" type="_jgD2cejmEeilbsvZjylwTQ" association="_jj9fAejmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jizBYOjmEeilbsvZjylwTQ" name="eventAdmin" type="_jgD2cejmEeilbsvZjylwTQ" isReadOnly="true" association="_jj-GEejmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jizocOjmEeilbsvZjylwTQ" name="log" visibility="protected" isLeaf="true" type="_jgCoUejmEeilbsvZjylwTQ" isReadOnly="true" association="_jj-tIejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jizocejmEeilbsvZjylwTQ" value="LoggerFactory.getLogger(getClass())"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_jhxtsOjmEeilbsvZjylwTQ" client="_jcFVYOjmEeilbsvZjylwTQ" supplier="_jgR44-jmEeilbsvZjylwTQ" contract="_jgR44-jmEeilbsvZjylwTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjPtUujmEeilbsvZjylwTQ" name="postDatumCapturedEvent" specification="_jhyUwOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjPtU-jmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>if ( datum == null ) {
			return;
		}
		Event event = createDatumCapturedEvent(datum);
		postEvent(event);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjPtVOjmEeilbsvZjylwTQ" name="createDatumCapturedEvent" specification="_jhy70OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjPtVejmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjPtVujmEeilbsvZjylwTQ" type="_jgUVIejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>Map&lt;String, ?> props = datum.asSimpleMap();
		log.debug(&quot;Created {} event with props {}&quot;, DatumDataSource.EVENT_TOPIC_DATUM_CAPTURED, props);
		return new Event(DatumDataSource.EVENT_TOPIC_DATUM_CAPTURED, props);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjQUYOjmEeilbsvZjylwTQ" name="postEvent" specification="_jhzi4OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjQUYejmEeilbsvZjylwTQ" name="event" type="_jgUVIejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>EventAdmin ea = (eventAdmin == null ? null : eventAdmin.service());
		if ( ea == null || event == null ) {
			return;
		}
		ea.postEvent(event);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjQUYujmEeilbsvZjylwTQ" name="addSourceMetadata" specification="_jh0J8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjQUY-jmEeilbsvZjylwTQ" name="sourceId">
                  <eAnnotations xmi:id="_jjQUZOjmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jjQUZejmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjQUZujmEeilbsvZjylwTQ" name="meta" type="_jgVjQejmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jjQUZ-jmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jjQUaOjmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jjQUaejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>GeneralDatumMetadata cached = SOURCE_METADATA_CACHE.get(sourceId);
		if ( cached != null &amp;&amp; meta.equals(cached) ) {
			// we've already posted this metadata... don't bother doing it again
			log.debug(&quot;Source {} metadata already added, not posting again&quot;, sourceId);
			return true;
		}
		DatumMetadataService service = null;
		if ( datumMetadataService != null ) {
			service = datumMetadataService.service();
		}
		if ( service == null ) {
			return false;
		}
		try {
			service.addSourceMetadata(sourceId, meta);
			SOURCE_METADATA_CACHE.put(sourceId, meta);
			return true;
		} catch ( Exception e ) {
			log.warn(&quot;Error saving source {} metadata: {}&quot;, sourceId, e.getMessage());
		}
		return false;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjQUaujmEeilbsvZjylwTQ" name="getIdentifiableSettingSpecifiers" specification="_jcGjgOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjQUa-jmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjQUbOjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;SettingSpecifier> results = new ArrayList&lt;SettingSpecifier>(16);
		results.add(new BasicTextFieldSettingSpecifier(&quot;uid&quot;, null));
		results.add(new BasicTextFieldSettingSpecifier(&quot;groupUID&quot;, null));
		return results;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjQ7cOjmEeilbsvZjylwTQ" name="getUID" specification="_jcHKkujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjQ7cejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getUid();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjQ7cujmEeilbsvZjylwTQ" name="setGroupUID" specification="_jcHxpOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjQ7c-jmEeilbsvZjylwTQ" name="groupUID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.groupUID = groupUID;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjQ7dOjmEeilbsvZjylwTQ" name="setEventAdmin" specification="_jh0xAOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjQ7dejmEeilbsvZjylwTQ" name="eventAdmin" type="_jgD2cejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>this.eventAdmin = eventAdmin;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjQ7dujmEeilbsvZjylwTQ" name="getDatumMetadataService" specification="_jcIYsOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjQ7d-jmEeilbsvZjylwTQ" type="_jgD2cejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>return datumMetadataService;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjQ7eOjmEeilbsvZjylwTQ" name="setDatumMetadataService" specification="_jh1YEujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjQ7eejmEeilbsvZjylwTQ" name="datumMetadataService" type="_jgD2cejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>this.datumMetadataService = datumMetadataService;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jcGjgOjmEeilbsvZjylwTQ" name="getIdentifiableSettingSpecifiers" visibility="protected" method="_jjQUaujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjvckejmEeilbsvZjylwTQ">
                  <body>Get setting specifiers for the {@code uid} and {@code groupUID}
	 * properties.
	 * 
	 * @return list of setting specifiers</body>
                </ownedComment>
                <ownedParameter xmi:id="_jcHKkOjmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jcHKkejmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcHKkujmEeilbsvZjylwTQ" name="getUID" method="_jjQ7cOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcHxoOjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcHxpOjmEeilbsvZjylwTQ" name="setGroupUID" method="_jjQ7cujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjvckujmEeilbsvZjylwTQ">
                  <body>Set a unique group ID for this service.
	 * 
	 * @param groupUID
	 *        the group ID to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_jcHxpejmEeilbsvZjylwTQ" name="groupUID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcIYsOjmEeilbsvZjylwTQ" name="getDatumMetadataService" method="_jjQ7dujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjvclOjmEeilbsvZjylwTQ">
                  <body>Get the configured {@link DatumMetadataService}.
	 * 
	 * @return the service to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_jh1YEejmEeilbsvZjylwTQ" type="_jgD2cejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhyUwOjmEeilbsvZjylwTQ" name="postDatumCapturedEvent" visibility="protected" isLeaf="true" method="_jjPtUujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jju1g-jmEeilbsvZjylwTQ">
                  <body>Post an {@link Event} for the
	 * {@link DatumDataSource#EVENT_TOPIC_DATUM_CAPTURED} topic.
	 * 
	 * @param datum
	 *        the datum that was stored</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhyUwejmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhy70OjmEeilbsvZjylwTQ" name="createDatumCapturedEvent" visibility="protected" method="_jjPtVOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jju1hOjmEeilbsvZjylwTQ">
                  <body>Create a new {@link DatumDataSource#EVENT_TOPIC_DATUM_CAPTURED}
	 * {@link Event} object out of a {@link Datum}.
	 * 
	 * &lt;p>
	 * This method uses the result of {@link Datum#asSimpleMap()} as the event
	 * properties.
	 * &lt;/p>
	 * 
	 * @param datum
	 *        the datum to create the event for
	 * @return the new Event instance</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhy70ejmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jhy70ujmEeilbsvZjylwTQ" type="_jgUVIejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jhzi4OjmEeilbsvZjylwTQ" name="postEvent" visibility="protected" isLeaf="true" method="_jjQUYOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jju1hejmEeilbsvZjylwTQ">
                  <body>Post an {@link Event}.
	 * 
	 * &lt;p>
	 * This method only works if a {@link EventAdmin} has been configured via
	 * {@link #setEventAdmin(OptionalService)}. Otherwise the event is silently
	 * ignored.
	 * &lt;/p>
	 * 
	 * @param event
	 *        the event to post</body>
                </ownedComment>
                <ownedParameter xmi:id="_jhzi4ejmEeilbsvZjylwTQ" name="event" type="_jgUVIejmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jh0J8OjmEeilbsvZjylwTQ" name="addSourceMetadata" visibility="protected" method="_jjQUYujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjvckOjmEeilbsvZjylwTQ">
                  <body>Add source metadata using the configured {@link DatumMetadataService} (if
	 * available). The metadata will be cached so that subsequent calls to this
	 * method with the same metadata value will not try to re-save the unchanged
	 * value. This method will catch all exceptions and silently discard them.
	 * 
	 * @param sourceId
	 *        the source ID to add metadata to
	 * @param meta
	 *        the metadata to add
	 * @param returns
	 *        &lt;em>true&lt;/em> if the metadata was saved successfully, or does not
	 *        need to be updated</body>
                </ownedComment>
                <ownedParameter xmi:id="_jh0J8ejmEeilbsvZjylwTQ" name="sourceId">
                  <eAnnotations xmi:id="_jh0J9OjmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jh0J9ejmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jh0J8ujmEeilbsvZjylwTQ" name="meta" type="_jgVjQejmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jh0J9ujmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jh0J9-jmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jh0J8-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jh0xAOjmEeilbsvZjylwTQ" name="setEventAdmin" method="_jjQ7dOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjvck-jmEeilbsvZjylwTQ">
                  <body>Set an {@link EventAdmin} service to use.
	 * 
	 * @param eventAdmin
	 *        the EventAdmin to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_jh0xAejmEeilbsvZjylwTQ" name="eventAdmin" type="_jgD2cejmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jh1YEujmEeilbsvZjylwTQ" name="setDatumMetadataService" method="_jjQ7eOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjvclejmEeilbsvZjylwTQ">
                  <body>Set a {@link DatumMetadataService} to use for managing datum metadata.
	 * 
	 * @param datumMetadataService
	 *        the service to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_jh1YE-jmEeilbsvZjylwTQ" name="datumMetadataService" type="_jgD2cejmEeilbsvZjylwTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jcMqIOjmEeilbsvZjylwTQ" name="LocationDatumDataSource">
              <ownedComment xmi:id="_jjvclujmEeilbsvZjylwTQ">
                <body>{@link DatumDataSource} that augments some other data source's datum values
with location IDs.

&lt;p>
This is to be used to easily augment various datum that relate to a location
with the necessary {@link Location#getLocationId()} ID. This class also
implements the {@link MultiDatumDataSource} API, and will call the methods of
that API on the configured {@code delegate} if that also implements
{@link MultiDatumDataSource}. If the {@code delegate} does not implement
{@link MultiDatumDataSource} this class will &quot;fake&quot; that API by calling
{@link DatumDataSource#readCurrentDatum()} and returning that object in a
Collection.
&lt;/p>

&lt;p>
The configurable properties of this class are:
&lt;/p>

&lt;dl class=&quot;class-properties&quot;>
&lt;dt>delegate&lt;/dt>
&lt;dd>The {@link DatumDataSource} to delegate to.&lt;/dd>

&lt;dt>locationType&lt;/dt>
&lt;dd>The type of location to search for. Defaults to {@link PriceLocation}.&lt;/dd>

&lt;dt>locationService&lt;/dt>
&lt;dd>The {@link LocationService} to use to lookup {@link Location} instances
via the configured {@code locationId} property.&lt;/dd>

&lt;dt>locationId&lt;/dt>
&lt;dd>The {@link Location} ID to assign.&lt;/dd>

&lt;dt>locationIdPropertyName&lt;/dt>
&lt;dd>The JavaBean property name to set the found
{@link Location#getLocationId()} to on the {@link Datum} returned from the
configured {@code delegate}. The object must support a JavaBean setter method
for this property. Defaults to {@link #DEFAULT_LOCATION_ID_PROP_NAME}.&lt;/dd>

&lt;dt>sourceIdId&lt;/dt>
&lt;dd>The location source ID to assign.&lt;/dd>

&lt;dt>sourceIdPropertyName&lt;/dt>
&lt;dd>The JavaBean property name to set the found
{@link Location#getSourceId()} to on the {@link Datum} returned from the
configured {@code delegate}. The object must support a JavaBean setter method
for this property. Defaults to {@link #DEFAULT_SOURCE_ID_PROP_NAME}.&lt;/dd>

&lt;dt>requireLocationService&lt;/dt>
&lt;dd>If configured as &lt;em>true&lt;/em> then return &lt;em>null&lt;/em> data only
instead of calling the delegate. This is designed for services that require a
location ID to be set, for example a Location Datum logger. Defaults to
&lt;em>false&lt;/em>.&lt;/dd>

&lt;dt>messageBundleBasename&lt;/dt>
&lt;dd>The message bundle basename to use. This can be customized so different
messages can be shown for different uses of this proxy. Defaults to
{@link #PRICE_LOCATION_MESSAGE_BUNDLE}.&lt;/dd>
&lt;/dl>

@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ji02kOjmEeilbsvZjylwTQ" name="DEFAULT_LOCATION_ID_PROP_NAME" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji02kejmEeilbsvZjylwTQ" value="&quot;locationId&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji02kujmEeilbsvZjylwTQ" name="DEFAULT_SOURCE_ID_PROP_NAME" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji02k-jmEeilbsvZjylwTQ" value="&quot;locationSourceId&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji1doOjmEeilbsvZjylwTQ" name="PRICE_LOCATION_MESSAGE_BUNDLE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji1doejmEeilbsvZjylwTQ" value="&quot;org.eniware.edge.support.PriceLocationDatumDataSource&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji1doujmEeilbsvZjylwTQ" name="delegate" type="_jgRR0ejmEeilbsvZjylwTQ" association="_jj_UMejmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_ji2EsejmEeilbsvZjylwTQ" name="locationService" type="_jgD2cejmEeilbsvZjylwTQ" association="_jj_7QejmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_ji2rwejmEeilbsvZjylwTQ" name="locationType">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji2rwujmEeilbsvZjylwTQ" value="Location.PRICE_TYPE"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji3S0OjmEeilbsvZjylwTQ" name="locationIdPropertyName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji3S0ejmEeilbsvZjylwTQ" value="DEFAULT_LOCATION_ID_PROP_NAME"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji3S0ujmEeilbsvZjylwTQ" name="sourceIdPropertyName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji3S0-jmEeilbsvZjylwTQ" value="DEFAULT_SOURCE_ID_PROP_NAME"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji354OjmEeilbsvZjylwTQ" name="requireLocationService">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji354ejmEeilbsvZjylwTQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji354ujmEeilbsvZjylwTQ" name="messageBundleBasename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji354-jmEeilbsvZjylwTQ" value="PRICE_LOCATION_MESSAGE_BUNDLE"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji4g8OjmEeilbsvZjylwTQ" name="locationId" type="_jh5pgOjmEeilbsvZjylwTQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji4g8ejmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji4g8ujmEeilbsvZjylwTQ" name="sourceId" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji4g8-jmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji5IAOjmEeilbsvZjylwTQ" name="datumClassNameIgnore">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ji5IAejmEeilbsvZjylwTQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji5IAujmEeilbsvZjylwTQ" name="location" type="_jgdfEOjmEeilbsvZjylwTQ" isReadOnly="true" association="_jkAiUejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji5IA-jmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji5vEOjmEeilbsvZjylwTQ" name="messageSource" type="_jgU8MejmEeilbsvZjylwTQ" association="_jkBJYejmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_ji69MujmEeilbsvZjylwTQ" name="log" visibility="private" isLeaf="true" type="_jgCoUejmEeilbsvZjylwTQ" isReadOnly="true" association="_jkBwcejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji69M-jmEeilbsvZjylwTQ" value="LoggerFactory.getLogger(getClass())"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_jh30UOjmEeilbsvZjylwTQ" client="_jcMqIOjmEeilbsvZjylwTQ" supplier="_jgRR0ejmEeilbsvZjylwTQ" contract="_jgRR0ejmEeilbsvZjylwTQ"/>
              <interfaceRealization xmi:id="_jh4bYejmEeilbsvZjylwTQ" client="_jcMqIOjmEeilbsvZjylwTQ" supplier="_jgcQ8ejmEeilbsvZjylwTQ" contract="_jgcQ8ejmEeilbsvZjylwTQ"/>
              <interfaceRealization xmi:id="_jh5CcejmEeilbsvZjylwTQ" client="_jcMqIOjmEeilbsvZjylwTQ" supplier="_jghJcejmEeilbsvZjylwTQ" contract="_jghJcejmEeilbsvZjylwTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjRihOjmEeilbsvZjylwTQ" name="getInstance" specification="_jh63oOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjRihejmEeilbsvZjylwTQ" name="delegate" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjRihujmEeilbsvZjylwTQ" name="locationService" type="_jgbC0ujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjRih-jmEeilbsvZjylwTQ" type="_jcMqIOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>LocationDatumDataSource&lt;? extends Datum> ds = new LocationDatumDataSource&lt;Datum>();
		ds.setDelegate((DatumDataSource) delegate);
		ds.setLocationService(locationService);
		return ds;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjSJkOjmEeilbsvZjylwTQ" name="getDatumType" specification="_jcPGYOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjSJkejmEeilbsvZjylwTQ" type="_jhtcQOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>return delegate.getDatumType();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjSJkujmEeilbsvZjylwTQ" name="getMultiDatumType" specification="_jcQUgujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjSJk-jmEeilbsvZjylwTQ" type="_jhtcQOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>if ( delegate instanceof MultiDatumDataSource ) {
			return ((MultiDatumDataSource&lt;T>) delegate).getMultiDatumType();
		}
		return delegate.getDatumType();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjSJlOjmEeilbsvZjylwTQ" name="readMultipleDatum" specification="_jcRioujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjSJlejmEeilbsvZjylwTQ" type="_jhs1MOjmEeilbsvZjylwTQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjSJlujmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>Collection&lt;T> results = null;
		if ( delegate instanceof MultiDatumDataSource ) {
			results = ((MultiDatumDataSource&lt;T>) delegate).readMultipleDatum();
		} else {
			// fake multi API
			results = new ArrayList&lt;T>(1);
			T datum = delegate.readCurrentDatum();
			if ( datum != null ) {
				results.add(datum);
			}
		}
		if ( results != null &amp;&amp; locationId != null ) {
			for ( T datum : results ) {
				populateLocation(datum);
			}
		} else if ( results != null &amp;&amp; results.size() > 0 &amp;&amp; locationId == null
				&amp;&amp; requireLocationService ) {
			log.warn(&quot;Location required but not available, discarding datum: {}&quot;, results);
			results = Collections.emptyList();
		}
		return results;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjSJl-jmEeilbsvZjylwTQ" name="readCurrentDatum" specification="_jcSJtejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjSJmOjmEeilbsvZjylwTQ" type="_jhs1MOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>T datum = delegate.readCurrentDatum();
		if ( datum != null &amp;&amp; locationId != null ) {
			populateLocation(datum);
		} else if ( datum != null &amp;&amp; locationId == null &amp;&amp; requireLocationService ) {
			log.warn(&quot;LocationService required but not available, discarding datum: {}&quot;, datum);
			datum = null;
		}
		return datum;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjSwoOjmEeilbsvZjylwTQ" name="populateLocation" specification="_jh9T4ejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjSwoejmEeilbsvZjylwTQ" name="datum" type="_jhs1MOjmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>if ( locationId != null &amp;&amp; sourceId != null &amp;&amp; !shouldIgnoreDatum(datum) ) {
			log.debug(&quot;Augmenting datum {} with locaiton ID {} ({})&quot;, datum, locationId, sourceId);
			if ( datum instanceof GeneralLocationDatum ) {
				GeneralLocationDatum gDatum = (GeneralLocationDatum) datum;
				gDatum.setLocationId(locationId);
				gDatum.setSourceId(sourceId);
			} else if ( datum instanceof GeneralEdgeDatum ) {
				GeneralEdgeDatum gDatum = (GeneralEdgeDatum) datum;
				gDatum.putStatusSampleValue(PricedDatum.PRICE_LOCATION_KEY, locationId);
				gDatum.putStatusSampleValue(PricedDatum.PRICE_SOURCE_KEY, sourceId);
			} else {
				BeanWrapper bean = PropertyAccessorFactory.forBeanPropertyAccess(datum);
				if ( bean.isWritableProperty(locationIdPropertyName)
						&amp;&amp; bean.isWritableProperty(sourceIdPropertyName) ) {
					bean.setPropertyValue(locationIdPropertyName, locationId);
					bean.setPropertyValue(sourceIdPropertyName, sourceId);
				}
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjSwoujmEeilbsvZjylwTQ" name="shouldIgnoreDatum" specification="_jh968OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjSwo-jmEeilbsvZjylwTQ" name="datum" type="_jhs1MOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjSwpOjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (datumClassNameIgnore != null &amp;&amp; datumClassNameIgnore
				.contains(datum.getClass().getName()));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjSwpejmEeilbsvZjylwTQ" name="toString" specification="_jcTX0OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjSwpujmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return delegate != null ? delegate.toString() + &quot;[LocationDatumDataSource proxy]&quot;
				: &quot;LocationDatumDataSource&quot;;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjSwp-jmEeilbsvZjylwTQ" name="getUID" specification="_jcT-4ujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjSwqOjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return delegate.getUID();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjSwqejmEeilbsvZjylwTQ" name="getGroupUID" specification="_jcUl8ujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjSwqujmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return delegate.getGroupUID();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjTXsOjmEeilbsvZjylwTQ" name="getSettingUID" specification="_jcVNAujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjTXsejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( delegate instanceof SettingSpecifierProvider ) {
			return ((SettingSpecifierProvider) delegate).getSettingUID();
		}
		return getClass().getName();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjTXsujmEeilbsvZjylwTQ" name="getDisplayName" specification="_jcV0EujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjTXs-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( delegate instanceof SettingSpecifierProvider ) {
			return ((SettingSpecifierProvider) delegate).getDisplayName();
		}
		return null;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjTXtOjmEeilbsvZjylwTQ" name="getSettingSpecifiers" specification="_jcWbIujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjTXtejmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjTXtujmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;SettingSpecifier> result = new ArrayList&lt;SettingSpecifier>();
		result.add(getLocationSettingSpecifier());
		if ( delegate instanceof SettingSpecifierProvider ) {
			List&lt;SettingSpecifier> delegateResult = ((SettingSpecifierProvider) delegate)
					.getSettingSpecifiers();
			if ( delegateResult != null ) {
				for ( SettingSpecifier spec : delegateResult ) {
					if ( spec instanceof KeyedSettingSpecifier&lt;?> ) {
						KeyedSettingSpecifier&lt;?> keyedSpec = (KeyedSettingSpecifier&lt;?>) spec;
						result.add(keyedSpec.mappedTo(&quot;delegate.&quot;));
					} else {
						result.add(spec);
					}
				}
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjTXt-jmEeilbsvZjylwTQ" name="getLocationSettingSpecifier" specification="_jcXCM-jmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjTXuOjmEeilbsvZjylwTQ" type="_jggiYejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>if ( location == null &amp;&amp; locationService != null &amp;&amp; locationId != null &amp;&amp; sourceId != null ) {
			LocationService service = locationService.service();
			if ( service != null ) {
				GeneralLocationSourceMetadata meta = service.getLocationMetadata(locationId, sourceId);
				BasicGeneralLocation loc = new BasicGeneralLocation();
				loc.setLocationId(locationId);
				loc.setSourceId(sourceId);
				loc.setSourceMetadata(meta);
				location = loc;
			}
		}
		return new BasicLocationLookupSettingSpecifier(&quot;locationKey&quot;, locationType, location);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjT-wOjmEeilbsvZjylwTQ" name="setLocationKey" specification="_jcXpQOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjT-wejmEeilbsvZjylwTQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Long newLocationId = null;
		String newSourceId = null;
		if ( key != null ) {
			int idx = key.indexOf(':');
			if ( idx > 0 &amp;&amp; idx + 1 &lt; key.length() ) {
				newLocationId = Long.valueOf(key.substring(0, idx));
				newSourceId = key.substring(idx + 1);
			}
		}
		setLocationId(newLocationId);
		setSourceId(newSourceId);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjT-wujmEeilbsvZjylwTQ" name="setLocationId" specification="_jh-iAejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjT-w-jmEeilbsvZjylwTQ" name="locationId" type="_jh5pgOjmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>if ( this.location != null &amp;&amp; locationId != null
				&amp;&amp; !locationId.equals(this.location.getLocationId()) ) {
			this.location = null; // set to null so we re-fetch from server
		}
		this.locationId = locationId;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjT-xOjmEeilbsvZjylwTQ" name="setSourceId" specification="_jcXpQujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjT-xejmEeilbsvZjylwTQ" name="sourceId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( this.location != null &amp;&amp; sourceId != null &amp;&amp; !sourceId.equals(this.location.getSourceId()) ) {
			this.location = null; // set to null so we re-fetch from server
		}
		this.sourceId = sourceId;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jcPGYOjmEeilbsvZjylwTQ" name="getDatumType" method="_jjSJkOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jh8s1OjmEeilbsvZjylwTQ" type="_jhtcQOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jcQUgujmEeilbsvZjylwTQ" name="getMultiDatumType" method="_jjSJkujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jh8s1ejmEeilbsvZjylwTQ" type="_jhtcQOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jcRioujmEeilbsvZjylwTQ" name="readMultipleDatum" method="_jjSJlOjmEeilbsvZjylwTQ">
                <eAnnotations xmi:id="_jcRipejmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_jcRipujmEeilbsvZjylwTQ" key="generic_container"/>
                </eAnnotations>
                <ownedParameter xmi:id="_jcRio-jmEeilbsvZjylwTQ" type="_jhs1MOjmEeilbsvZjylwTQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jcRipOjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcSJtejmEeilbsvZjylwTQ" name="readCurrentDatum" method="_jjSJl-jmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jh9T4OjmEeilbsvZjylwTQ" type="_jhs1MOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jcTX0OjmEeilbsvZjylwTQ" name="toString" method="_jjSwpejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcTX0ejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcT-4ujmEeilbsvZjylwTQ" name="getUID" method="_jjSwp-jmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcT-4-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcUl8ujmEeilbsvZjylwTQ" name="getGroupUID" method="_jjSwqejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcUl8-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcVNAujmEeilbsvZjylwTQ" name="getSettingUID" method="_jjTXsOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcVNA-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcV0EujmEeilbsvZjylwTQ" name="getDisplayName" method="_jjTXsujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcV0E-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcWbIujmEeilbsvZjylwTQ" name="getSettingSpecifiers" method="_jjTXtOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcWbI-jmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jcWbJOjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcXCM-jmEeilbsvZjylwTQ" name="getLocationSettingSpecifier" visibility="private" method="_jjTXt-jmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jh-iAOjmEeilbsvZjylwTQ" type="_jggiYejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jcXpQOjmEeilbsvZjylwTQ" name="setLocationKey" method="_jjT-wOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjwDpOjmEeilbsvZjylwTQ">
                  <body>Set the location ID and source ID as a single string value. The format of
	 * the key is {@code locationId:sourceId}.
	 * 
	 * @param key
	 *        the location and source ID key</body>
                </ownedComment>
                <ownedParameter xmi:id="_jcXpQejmEeilbsvZjylwTQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcXpQujmEeilbsvZjylwTQ" name="setSourceId" method="_jjT-xOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcXpQ-jmEeilbsvZjylwTQ" name="sourceId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jh63oOjmEeilbsvZjylwTQ" name="getInstance" isStatic="true" method="_jjRihOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jh63oejmEeilbsvZjylwTQ" name="delegate" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jh63oujmEeilbsvZjylwTQ" name="locationService" type="_jgbC0ujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jh7esejmEeilbsvZjylwTQ" type="_jcMqIOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jh9T4ejmEeilbsvZjylwTQ" name="populateLocation" visibility="private" method="_jjSwoOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jh9T4ujmEeilbsvZjylwTQ" name="datum" type="_jhs1MOjmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jh968OjmEeilbsvZjylwTQ" name="shouldIgnoreDatum" visibility="private" method="_jjSwoujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jh968ejmEeilbsvZjylwTQ" name="datum" type="_jhs1MOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jh968ujmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jh-iAejmEeilbsvZjylwTQ" name="setLocationId" method="_jjT-wujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jh-iAujmEeilbsvZjylwTQ" name="locationId" type="_jh5pgOjmEeilbsvZjylwTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jceW8OjmEeilbsvZjylwTQ" name="SerialPortBean">
              <ownedComment xmi:id="_jjwqsOjmEeilbsvZjylwTQ">
                <body>A basic JavaBean class for serial port configuration elements.

&lt;p>The {@code dataBits}, {@code stopBits}, and {@code parity} class properties
should be initialized to values corresponding to the constants defined in the
{@link SerialPort} class (e.g. {@link SerialPort#DATABITS_8}, etc.).&lt;/p>

&lt;p>The configurable properties of this class are:&lt;/p>

&lt;dl class=&quot;class-properties&quot;>
  &lt;dt>baud&lt;/dt>
  &lt;dd>The SerialPort communication speed. Defaults to {@code 19200}.&lt;/dd>
  
  &lt;dt>dataBits&lt;/dt>
  &lt;dd>The SerialPort number of data bits. Defaults to 
  {@link SerialPort#DATABITS_8}.&lt;/dd>
  
  &lt;dt>stopBits&lt;/dt>
  &lt;dd>The SerialPort number of stop bits. Defaults to 
  {@link SerialPort#STOPBITS_1}.&lt;/dd>
  
  &lt;dt>parity&lt;/dt>
  &lt;dd>The SerialPort parity setting to use. Defaults to 
  {@link SerialPort#PARITY_NONE}.&lt;/dd>
  
  &lt;dt>flowControl&lt;/dt>
  &lt;dd>The SerialPort flow control setting to use. If less than 0 will not be 
  configured. Defaults to -1.&lt;/dd>
  
  &lt;dt>receiveThreshold&lt;/dt>
  &lt;dd>The SerialPort receive threshold setting. Defaults to {@code 40}. If 
  set to anything less than 0 then the receive threshold will be disabled.&lt;/dd>
  
  &lt;dt>receiveTimeout&lt;/dt>
  &lt;dd>The SerialPort receive timeout setting. Defaults to {@code -1}. If 
  set to anything less than 0 then the receive timeout will be disabled.&lt;/dd>
  
  &lt;dt>receiveFraming&lt;/dt>
  &lt;dd>The SerialPort receive framing setting. Defaults to {@code -1}. If
  set to anything less than 0 then the receive framing will be disabled.&lt;/dd>
  
  &lt;dt>dtrFlag&lt;/dt>
  &lt;dd>The SerialPort DTR setting to use. Defaults to {@code 1}. When set 
  to {@code 0} DTR will be set to &lt;em>false&lt;/em>. When set to {@code 1}
  DTR will be set to &lt;em>true&lt;/em>. When configured as less than zero
  the DTR setting will not be changed. The {@code dtr} property can
  also be used to set this as a boolean.&lt;/dd>
  
  &lt;dt>rtsFlag&lt;/dt>
  &lt;dd>The SerialPort RTS setting to use. Defaults to {@code 0}. When set 
  to {@code 0} RTS will be set to &lt;em>false&lt;/em>. When set to {@code 1}
  RTS will be set to &lt;em>true&lt;/em>. When configured as less than zero
  the RTS setting will not be changed. The {@code rts} property can
  also be used to set this as a boolean.&lt;/dd>
  
&lt;/dl>
 *
@version $Revision$</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ji8LUOjmEeilbsvZjylwTQ" name="DEFAULTS" visibility="private" isLeaf="true" isStatic="true" type="_jceW8OjmEeilbsvZjylwTQ" isReadOnly="true" association="_jkCXgejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji8LUejmEeilbsvZjylwTQ" value="new SerialPortBean()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji8LUujmEeilbsvZjylwTQ" name="baud">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji8yYOjmEeilbsvZjylwTQ" value="19200"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji8yYejmEeilbsvZjylwTQ" name="dataBits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji8yYujmEeilbsvZjylwTQ" value="8"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji8yY-jmEeilbsvZjylwTQ" name="stopBits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji8yZOjmEeilbsvZjylwTQ" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji9ZcOjmEeilbsvZjylwTQ" name="parity">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji9ZcejmEeilbsvZjylwTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji9ZcujmEeilbsvZjylwTQ" name="flowControl">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji9Zc-jmEeilbsvZjylwTQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji-AgOjmEeilbsvZjylwTQ" name="receiveThreshold">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji-AgejmEeilbsvZjylwTQ" value="40"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji-AgujmEeilbsvZjylwTQ" name="receiveTimeout">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji-Ag-jmEeilbsvZjylwTQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji-nkOjmEeilbsvZjylwTQ" name="receiveFraming">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji-nkejmEeilbsvZjylwTQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji-nkujmEeilbsvZjylwTQ" name="dtrFlag">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji-nk-jmEeilbsvZjylwTQ" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji_OoOjmEeilbsvZjylwTQ" name="rtsFlag">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji_OoejmEeilbsvZjylwTQ" value="0"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_jiCMYOjmEeilbsvZjylwTQ" client="_jceW8OjmEeilbsvZjylwTQ" supplier="_jiBlUOjmEeilbsvZjylwTQ" contract="_jiBlUOjmEeilbsvZjylwTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjUl0OjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" specification="_jcflEOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjUl0ejmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjUl0ujmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjUl0-jmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return getDefaultSettingSpecifiers(DEFAULTS, prefix);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjUl1OjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" specification="_jgq6cOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjUl1ejmEeilbsvZjylwTQ" name="defaults" type="_jceW8OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjUl1ujmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjUl1-jmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjUl2OjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;SettingSpecifier> results = new ArrayList&lt;SettingSpecifier>(20);
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;baud&quot;, 
				String.valueOf(defaults.getBaud())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;dataBits&quot;, 
				String.valueOf(defaults.getDataBits())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;stopBits&quot;, 
				String.valueOf(defaults.getStopBits())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;parity&quot;, 
				String.valueOf(defaults.getParity())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;flowControl&quot;, 
				String.valueOf(defaults.getFlowControl())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;receiveThreshold&quot;, 
				String.valueOf(defaults.getReceiveThreshold())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;receiveTimeout&quot;, 
				String.valueOf(defaults.getReceiveTimeout())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;receiveFraming&quot;, 
				String.valueOf(defaults.getReceiveFraming())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;dtrFlag&quot;, 
				String.valueOf(defaults.getDtrFlag())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;rtsFlag&quot;, 
				String.valueOf(defaults.getRtsFlag())));
		return results;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjUl2ejmEeilbsvZjylwTQ" name="clone" specification="_jcgMIOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjUl2ujmEeilbsvZjylwTQ" type="_jheLsejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>try {
			return super.clone();
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjVM4OjmEeilbsvZjylwTQ" name="isDtr" specification="_jcgzM-jmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjVM4ejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return dtrFlag > 0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjVM4ujmEeilbsvZjylwTQ" name="setDtr" specification="_jchaQejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjVM4-jmEeilbsvZjylwTQ" name="dtr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.dtrFlag = (dtr ? 1 : 0);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjVM5OjmEeilbsvZjylwTQ" name="isRts" specification="_jchaQ-jmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjVM5ejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return rtsFlag > 0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjVM5ujmEeilbsvZjylwTQ" name="setRts" specification="_jciBUejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjVM5-jmEeilbsvZjylwTQ" name="rts">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.rtsFlag = (rts ? 1 : 0);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jcflEOjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" isStatic="true" method="_jjUl0OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjwqsejmEeilbsvZjylwTQ">
                  <body>Get a list of setting specifiers for this bean.
	 * 
	 * @param prefix bean prefix to use
	 * @return setting specifiers</body>
                </ownedComment>
                <ownedParameter xmi:id="_jcflEejmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jcflEujmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jcflE-jmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcgMIOjmEeilbsvZjylwTQ" name="clone" method="_jjUl2ejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jiCzcOjmEeilbsvZjylwTQ" type="_jheLsejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jcgzM-jmEeilbsvZjylwTQ" name="isDtr" method="_jjVM4OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jchaQOjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jchaQejmEeilbsvZjylwTQ" name="setDtr" method="_jjVM4ujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jchaQujmEeilbsvZjylwTQ" name="dtr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jchaQ-jmEeilbsvZjylwTQ" name="isRts" method="_jjVM5OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jciBUOjmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jciBUejmEeilbsvZjylwTQ" name="setRts" method="_jjVM5ujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jciBUujmEeilbsvZjylwTQ" name="rts">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jgq6cOjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" isStatic="true" method="_jjUl1OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjwqsujmEeilbsvZjylwTQ">
                  <body>Get a list of setting specifiers for this bean.
	 * 
	 * @param defaults the default values to use
	 * @param prefix the bean prefix to use
	 * @return setting specifiers</body>
                </ownedComment>
                <ownedParameter xmi:id="_jgq6cejmEeilbsvZjylwTQ" name="defaults" type="_jceW8OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jgq6cujmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jgrhgOjmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jgrhgejmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jckdkOjmEeilbsvZjylwTQ" name="SerialPortBeanParameters">
              <ownedComment xmi:id="_jjwqs-jmEeilbsvZjylwTQ">
                <body>Parameters to configure a serial port with.

&lt;p>
The configurable properties of this class are:
&lt;/p>

&lt;dl class=&quot;class-properties&quot;>
&lt;dt>serialPort&lt;/dt>
&lt;dd>The name of the serial port to use. This is OS-specific, for example
&lt;code>/dev/ttyUSB0&lt;/code>.&lt;/dd>

&lt;dt>commPortAppName&lt;/dt>
&lt;dd>A user-defined name to associate with the serial port. The serial port
can only be used by one application at a time.&lt;/dd>

&lt;dt>maxWait&lt;/dt>
&lt;dd>A maximum number of milliseconds to wait for the serial port to return
data, before giving up. This differs from the {@code receiveTimeout} 
setting in that this timeout is not set on the port itself, but is managed
by the application.&lt;/dd>
&lt;/dl>

@version $Revision$</body>
              </ownedComment>
              <generalization xmi:id="_jguk0OjmEeilbsvZjylwTQ" general="_jceW8OjmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_ji_1sOjmEeilbsvZjylwTQ" name="DEFAULTS" visibility="private" isLeaf="true" isStatic="true" type="_jckdkOjmEeilbsvZjylwTQ" isReadOnly="true" association="_jkC-kejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji_1sejmEeilbsvZjylwTQ" value="new SerialPortBeanParameters()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji_1sujmEeilbsvZjylwTQ" name="serialPort">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ji_1s-jmEeilbsvZjylwTQ" value="&quot;/dev/ttyUSB0&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ji_1tOjmEeilbsvZjylwTQ" name="commPortAppName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjAcwOjmEeilbsvZjylwTQ" value="&quot;EniwareEdge&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjAcwejmEeilbsvZjylwTQ" name="maxWait">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjAcwujmEeilbsvZjylwTQ" value="0"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjVz8OjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" specification="_jclrsOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjVz8ejmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjVz8ujmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjVz8-jmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return getDefaultSettingSpecifiers(DEFAULTS, prefix);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjVz9OjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" specification="_jgt9wOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjVz9ejmEeilbsvZjylwTQ" name="defaults" type="_jckdkOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjVz9ujmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjVz9-jmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjVz-OjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;SettingSpecifier> results = SerialPortBean.getDefaultSettingSpecifiers(
				defaults, prefix);
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;commPortAppName&quot;, 
				defaults.getCommPortAppName()));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;maxWait&quot;, 
				String.valueOf(defaults.getMaxWait())));
		return results;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jclrsOjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" isStatic="true" method="_jjVz8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jclrsejmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jclrsujmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jclrs-jmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jgt9wOjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" isStatic="true" method="_jjVz9OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jgt9wejmEeilbsvZjylwTQ" name="defaults" type="_jckdkOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jgt9wujmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jgt9w-jmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jgt9xOjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jcng4OjmEeilbsvZjylwTQ" name="DataCollectorSerialPortBeanParameters">
              <ownedComment xmi:id="_jjwqtOjmEeilbsvZjylwTQ">
                <body>Configuration bean for {@link DataCollector}.

@version 1.0</body>
              </ownedComment>
              <generalization xmi:id="_jgzdUOjmEeilbsvZjylwTQ" general="_jckdkOjmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jjBD0OjmEeilbsvZjylwTQ" name="DEFAULTS" visibility="private" isLeaf="true" isStatic="true" type="_jcng4OjmEeilbsvZjylwTQ" isReadOnly="true" association="_jkDloejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjBD0ejmEeilbsvZjylwTQ" value="new DataCollectorSerialPortBeanParameters()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjBD0ujmEeilbsvZjylwTQ" name="bufferSize">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjBD0-jmEeilbsvZjylwTQ" value="4096"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjBq4OjmEeilbsvZjylwTQ" name="magic">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjBq4ejmEeilbsvZjylwTQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjBq4-jmEeilbsvZjylwTQ" value="new byte[] { 0x13 }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjBq5OjmEeilbsvZjylwTQ" name="magicEOF">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjCR8OjmEeilbsvZjylwTQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjCR8ujmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjCR8-jmEeilbsvZjylwTQ" name="readSize">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjCR9OjmEeilbsvZjylwTQ" value="8"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjC5AOjmEeilbsvZjylwTQ" name="toggleDtr">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjC5AejmEeilbsvZjylwTQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjC5AujmEeilbsvZjylwTQ" name="toggleRts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjC5A-jmEeilbsvZjylwTQ" value="true"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjVz-ejmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" specification="_jcoH8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjVz-ujmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjVz--jmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjVz_OjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return getDefaultSettingSpecifiers(DEFAULTS, prefix);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjWbAOjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" specification="_jgxoIejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjWbAejmEeilbsvZjylwTQ" name="defaults" type="_jcng4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjWbAujmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjWbA-jmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjWbBOjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;SettingSpecifier> results = SerialPortBeanParameters.getDefaultSettingSpecifiers(defaults,
				prefix);
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;bufferSize&quot;, String.valueOf(defaults
				.getBufferSize())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;magicHex&quot;, defaults.getMagicHex()));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;readSize&quot;, String.valueOf(defaults
				.getReadSize())));
		results.add(new BasicToggleSettingSpecifier(prefix + &quot;toggleDtr&quot;, defaults.isToggleDtr()));
		results.add(new BasicToggleSettingSpecifier(prefix + &quot;toggleRts&quot;, defaults.isToggleRts()));
		return results;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjWbBejmEeilbsvZjylwTQ" name="getDefaultVariableSettingSpecifiers" specification="_jgy2QOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjWbBujmEeilbsvZjylwTQ" name="defaults" type="_jcng4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjWbB-jmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjWbCOjmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jjWbCejmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;SettingSpecifier> results = SerialPortBeanParameters.getDefaultSettingSpecifiers(defaults,
				prefix);
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;bufferSize&quot;, String.valueOf(defaults
				.getBufferSize())));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;magicHex&quot;, defaults.getMagicHex()));
		results.add(new BasicTextFieldSettingSpecifier(prefix + &quot;magicEOFHex&quot;, defaults.getMagicEOFHex()));
		results.add(new BasicToggleSettingSpecifier(prefix + &quot;toggleDtr&quot;, defaults.isToggleDtr()));
		results.add(new BasicToggleSettingSpecifier(prefix + &quot;toggleRts&quot;, defaults.isToggleRts()));
		return results;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjWbCujmEeilbsvZjylwTQ" name="getMagicHex" specification="_jcpWEOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjWbC-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( getMagic() == null ) {
			return null;
		}
		return Hex.encodeHexString(getMagic());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjXCEOjmEeilbsvZjylwTQ" name="setMagicHex" specification="_jcpWEujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjXCEejmEeilbsvZjylwTQ" name="hex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( hex == null || (hex.length() % 2) == 1 ) {
			setMagic(null);
		}
		try {
			setMagic(Hex.decodeHex(hex.toCharArray()));
		} catch ( DecoderException e ) {
			// fail silently, sorry
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjXCEujmEeilbsvZjylwTQ" name="getMagicEOFHex" specification="_jcp9IejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjXCE-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( getMagicEOF() == null ) {
			return null;
		}
		return Hex.encodeHexString(getMagicEOF());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjXCFOjmEeilbsvZjylwTQ" name="setMagicEOFHex" specification="_jcqkMOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjXCFejmEeilbsvZjylwTQ" name="hex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( hex == null || (hex.length() % 2) == 1 ) {
			setMagicEOF(null);
		}
		try {
			setMagicEOF(Hex.decodeHex(hex.toCharArray()));
		} catch ( DecoderException e ) {
			// fail silently, sorry
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jcoH8OjmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" isStatic="true" method="_jjVz-ejmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjwqtejmEeilbsvZjylwTQ">
                  <body>Get a list of setting specifiers for this bean.
	 * 
	 * @param prefix
	 *        the bean prefix to use
	 * @return setting specifiers</body>
                </ownedComment>
                <ownedParameter xmi:id="_jcoH8ejmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jcovAOjmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jcovAejmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcpWEOjmEeilbsvZjylwTQ" name="getMagicHex" method="_jjWbCujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcpWEejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcpWEujmEeilbsvZjylwTQ" name="setMagicHex" method="_jjXCEOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcp9IOjmEeilbsvZjylwTQ" name="hex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcp9IejmEeilbsvZjylwTQ" name="getMagicEOFHex" method="_jjXCEujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcp9IujmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jcqkMOjmEeilbsvZjylwTQ" name="setMagicEOFHex" method="_jjXCFOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jcqkMejmEeilbsvZjylwTQ" name="hex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jgxoIejmEeilbsvZjylwTQ" name="getDefaultSettingSpecifiers" isStatic="true" method="_jjWbAOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjwqtujmEeilbsvZjylwTQ">
                  <body>Get a list of setting specifiers for this bean, with fixed size message
	 * support.
	 * 
	 * @param defaults
	 *        the default values to use
	 * @param prefix
	 *        the bean prefix to use
	 * @return setting specifiers</body>
                </ownedComment>
                <ownedParameter xmi:id="_jgyPMOjmEeilbsvZjylwTQ" name="defaults" type="_jcng4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jgyPMejmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jgyPMujmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jgyPM-jmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jgy2QOjmEeilbsvZjylwTQ" name="getDefaultVariableSettingSpecifiers" isStatic="true" method="_jjWbBejmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjxRwOjmEeilbsvZjylwTQ">
                  <body>Get a list of setting specifiers for this bean, with variable message
	 * size support.
	 * 
	 * @param defaults
	 *        the default values to use
	 * @param prefix
	 *        the bean prefix to use
	 * @return setting specifiers</body>
                </ownedComment>
                <ownedParameter xmi:id="_jgy2QejmEeilbsvZjylwTQ" name="defaults" type="_jcng4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jgy2QujmEeilbsvZjylwTQ" name="prefix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jgy2Q-jmEeilbsvZjylwTQ" type="_jgTHAejmEeilbsvZjylwTQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jgy2ROjmEeilbsvZjylwTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jctAcOjmEeilbsvZjylwTQ" name="XmlServiceSupport" isAbstract="true">
              <ownedComment xmi:id="_jjxRwejmEeilbsvZjylwTQ">
                <body>An abstract class to support services that use XML.&#xD;
&#xD;
&lt;p>&#xD;
This class provides similar support as {@link DatumDataSourceSupport}, but&#xD;
with additional HTTP client and XML support.&#xD;
&lt;/p>&#xD;
&#xD;
@version 1.5</body>
              </ownedComment>
              <generalization xmi:id="_jhJbkOjmEeilbsvZjylwTQ" general="_jb3S8OjmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jjDgEOjmEeilbsvZjylwTQ" name="SOURCE_METADATA_CACHE" visibility="private" isLeaf="true" isStatic="true" type="_jgQqwejmEeilbsvZjylwTQ" isReadOnly="true" association="_jkEMsejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjEHIejmEeilbsvZjylwTQ" value="new ConcurrentHashMap&lt;String, GeneralDatumMetadata>(&#xD;&#xA;&#x9;&#x9;&#x9;4)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjEHIujmEeilbsvZjylwTQ" name="ATTR_Edge_ID" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjEuMOjmEeilbsvZjylwTQ" value="&quot;Edge-id&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjEuMejmEeilbsvZjylwTQ" name="nsContext" type="_jg5j8ejmEeilbsvZjylwTQ" association="_jkEzwejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjEuMujmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjEuM-jmEeilbsvZjylwTQ" name="docBuilderFactory" visibility="private" type="_jg6LAejmEeilbsvZjylwTQ" association="_jkFa0ejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjFVQOjmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjFVQujmEeilbsvZjylwTQ" name="xpathFactory" type="_jhCG0ejmEeilbsvZjylwTQ" association="_jkGB4ejmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjF8UOjmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjGjYOjmEeilbsvZjylwTQ" name="transformerFactory" visibility="private" type="_jg91YujmEeilbsvZjylwTQ" association="_jkGo8OjmEeilbsvZjylwTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_jjGjYejmEeilbsvZjylwTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_jjHKcOjmEeilbsvZjylwTQ" name="messageSource" type="_jgU8MejmEeilbsvZjylwTQ" association="_jjxRwujmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jjHKcejmEeilbsvZjylwTQ" name="eventAdmin" type="_jgD2cejmEeilbsvZjylwTQ" isReadOnly="true" association="_jkHQAOjmEeilbsvZjylwTQ"/>
              <ownedAttribute xmi:id="_jjHxgejmEeilbsvZjylwTQ" name="datumMetadataService" visibility="private" type="_jgD2cejmEeilbsvZjylwTQ" association="_jkHQA-jmEeilbsvZjylwTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjXpIejmEeilbsvZjylwTQ" name="init" specification="_jcuOkOjmEeilbsvZjylwTQ">
                <language>java</language>
                <body>// nothing here; retained for backwards compatibility&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjXpIujmEeilbsvZjylwTQ" name="getXPathExpressionMap" specification="_jiHr8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjXpI-jmEeilbsvZjylwTQ" name="xpathMap" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjXpJOjmEeilbsvZjylwTQ" type="_jfzXwOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>Map&lt;String, XPathExpression> datumXPathMap = new LinkedHashMap&lt;String, XPathExpression>();&#xD;
		for ( Map.Entry&lt;String, String> me : xpathMap.entrySet() ) {&#xD;
			try {&#xD;
				XPath xp = getXpathFactory().newXPath();&#xD;
				if ( getNsContext() != null ) {&#xD;
					xp.setNamespaceContext(getNsContext());&#xD;
				}&#xD;
				datumXPathMap.put(me.getKey(), xp.compile(me.getValue()));&#xD;
			} catch ( XPathExpressionException e ) {&#xD;
				throw new RuntimeException(e);&#xD;
			}&#xD;
		}&#xD;
		return datumXPathMap;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjXpJejmEeilbsvZjylwTQ" name="getTemplates" specification="_jiI6EejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjXpJujmEeilbsvZjylwTQ" name="resource" type="_jhCt4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjXpJ-jmEeilbsvZjylwTQ" type="_jg8AMejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>try {&#xD;
			return getTransformerFactory().newTemplates(new StreamSource(resource.getInputStream()));&#xD;
		} catch ( TransformerConfigurationException e ) {&#xD;
			throw new RuntimeException(&quot;Unable to load XSLT from resource [&quot; + resource + ']');&#xD;
		} catch ( IOException e ) {&#xD;
			throw new RuntimeException(&quot;Unable to load XSLT from resource [&quot; + resource + ']');&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjlrkOjmEeilbsvZjylwTQ" name="getSimpleSource" specification="_jiJhIOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjlrkejmEeilbsvZjylwTQ" name="o" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjlrkujmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjlrk-jmEeilbsvZjylwTQ" type="_jg7ZI-jmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>Document dom = getSimpleDocument(o, elementName);&#xD;
		return getSource(dom);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjmSoOjmEeilbsvZjylwTQ" name="getSimpleDocument" specification="_jiKIMOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjmSoejmEeilbsvZjylwTQ" name="o" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjmSoujmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjmSo-jmEeilbsvZjylwTQ" type="_jhCt4ujmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>Document dom = null;&#xD;
		SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd'T'HH:mm:ss.SSS'Z'&quot;);&#xD;
		sdf.setTimeZone(TimeZone.getTimeZone(&quot;GMT&quot;));&#xD;
		try {&#xD;
			dom = getDocBuilderFactory().newDocumentBuilder().newDocument();&#xD;
			Element root = dom.createElement(elementName);&#xD;
			dom.appendChild(root);&#xD;
			Map&lt;String, Object> props = ClassUtils.getBeanProperties(o, null);&#xD;
			for ( Map.Entry&lt;String, Object> me : props.entrySet() ) {&#xD;
				Object val = me.getValue();&#xD;
				if ( val instanceof Date ) {&#xD;
					val = sdf.format((Date) val);&#xD;
				}&#xD;
				root.setAttribute(me.getKey(), val.toString());&#xD;
&#xD;
				if ( log.isTraceEnabled() ) {&#xD;
					log.trace(&quot;attribute name: &quot; + me.getKey() + &quot; attribute value: &quot; + val.toString());&#xD;
				}&#xD;
&#xD;
			}&#xD;
		} catch ( ParserConfigurationException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		}&#xD;
		return dom;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjmSpOjmEeilbsvZjylwTQ" name="getDocument" specification="_jiKvQOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjmSpejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjmSpujmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjmSp-jmEeilbsvZjylwTQ" type="_jhCt4ujmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>Document dom = null;&#xD;
		try {&#xD;
			dom = getDocBuilderFactory().newDocumentBuilder().newDocument();&#xD;
			dom.appendChild(getElement(bean, elementName, dom));&#xD;
		} catch ( ParserConfigurationException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		}&#xD;
		return dom;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjmSqOjmEeilbsvZjylwTQ" name="getElement" specification="_jiLWUOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjmSqejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjmSqujmEeilbsvZjylwTQ" name="dom" type="_jhCt4ujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjmSq-jmEeilbsvZjylwTQ" type="_jhDU8ejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>String elementName = bean.getWrappedInstance().getClass().getSimpleName();&#xD;
		return getElement(bean, elementName, dom);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjm5sOjmEeilbsvZjylwTQ" name="getElement" specification="_jiL9YOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjm5sejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjm5sujmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjm5s-jmEeilbsvZjylwTQ" name="dom" type="_jhCt4ujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjm5tOjmEeilbsvZjylwTQ" type="_jhDU8ejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>PropertyDescriptor[] props = bean.getPropertyDescriptors();&#xD;
		Element root = null;&#xD;
		root = dom.createElement(elementName);&#xD;
		for ( int i = 0; i &lt; props.length; i++ ) {&#xD;
			PropertyDescriptor prop = props[i];&#xD;
			if ( prop.getReadMethod() == null ) {&#xD;
				continue;&#xD;
			}&#xD;
			String propName = prop.getName();&#xD;
			if ( &quot;class&quot;.equals(propName) ) {&#xD;
				continue;&#xD;
			}&#xD;
			Object propValue = null;&#xD;
			PropertyEditor editor = bean.findCustomEditor(prop.getPropertyType(), prop.getName());&#xD;
			if ( editor != null ) {&#xD;
				editor.setValue(bean.getPropertyValue(propName));&#xD;
				propValue = editor.getAsText();&#xD;
			} else {&#xD;
				propValue = bean.getPropertyValue(propName);&#xD;
			}&#xD;
			if ( propValue == null ) {&#xD;
				continue;&#xD;
			}&#xD;
			if ( log.isTraceEnabled() ) {&#xD;
				log.trace(&quot;attribute name: &quot; + propName + &quot; attribute value: &quot; + propValue);&#xD;
			}&#xD;
			root.setAttribute(propName, propValue.toString());&#xD;
		}&#xD;
		return root;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjm5tejmEeilbsvZjylwTQ" name="getSource" specification="_jiMkcejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjm5tujmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjm5t-jmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjm5uOjmEeilbsvZjylwTQ" type="_jg7ZI-jmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>Document dom = getDocument(bean, elementName);&#xD;
		return getSource(dom);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjm5uejmEeilbsvZjylwTQ" name="getSource" specification="_jiNLgejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjm5uujmEeilbsvZjylwTQ" name="dom" type="_jhCt4ujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjm5u-jmEeilbsvZjylwTQ" type="_jg7ZI-jmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>DOMSource result = new DOMSource(dom);&#xD;
		if ( log.isDebugEnabled() ) {&#xD;
			log.debug(&quot;XML: &quot; + getXmlAsString(result, true));&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjm5vOjmEeilbsvZjylwTQ" name="getXmlAsString" specification="_jiNykOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjm5vejmEeilbsvZjylwTQ" name="source" type="_jg7ZI-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjm5vujmEeilbsvZjylwTQ" name="indent">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjm5v-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>ByteArrayOutputStream byos = new ByteArrayOutputStream();&#xD;
		try {&#xD;
			Transformer xform = getTransformerFactory().newTransformer();&#xD;
			if ( indent ) {&#xD;
				xform.setOutputProperty(OutputKeys.INDENT, &quot;yes&quot;);&#xD;
				xform.setOutputProperty(&quot;{http://xml.apache.org/xslt}indent-amount&quot;, &quot;2&quot;);&#xD;
			}&#xD;
			xform.transform(source, new StreamResult(byos));&#xD;
		} catch ( TransformerConfigurationException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		} catch ( TransformerException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		}&#xD;
		return byos.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjngwOjmEeilbsvZjylwTQ" name="extractBeanDataFromXml" specification="_jiOZoOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjngwejmEeilbsvZjylwTQ" name="obj" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjngwujmEeilbsvZjylwTQ" name="xml" type="_jhD8AejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjngw-jmEeilbsvZjylwTQ" name="xpathMap" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>BeanWrapper bean;&#xD;
		if ( obj instanceof BeanWrapper ) {&#xD;
			bean = (BeanWrapper) obj;&#xD;
		} else {&#xD;
			bean = PropertyAccessorFactory.forBeanPropertyAccess(obj);&#xD;
		}&#xD;
		registerCustomEditors(bean);&#xD;
		for ( Map.Entry&lt;String, XPathExpression> me : xpathMap.entrySet() ) {&#xD;
			try {&#xD;
				String val = (String) me.getValue().evaluate(xml, XPathConstants.STRING);&#xD;
				if ( val != null &amp;&amp; !&quot;&quot;.equals(val) ) {&#xD;
					bean.setPropertyValue(me.getKey(), val);&#xD;
				}&#xD;
			} catch ( XPathExpressionException e ) {&#xD;
				throw new RuntimeException(e);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjngxOjmEeilbsvZjylwTQ" name="registerCustomEditors" specification="_jiPnwOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjngxejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>// nothing here... bean.registerCustomEditor(...)&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjngxujmEeilbsvZjylwTQ" name="getInputSourceFromURLConnection" specification="_jiPnwujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjngx-jmEeilbsvZjylwTQ" name="conn" type="_jf-W4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjngyOjmEeilbsvZjylwTQ" type="_jhEjEejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>Reader resp = null;&#xD;
		try {&#xD;
			resp = getUnicodeReaderFromURLConnection(conn);&#xD;
&#xD;
			// for now we are reading entire response into memory... might want&#xD;
			// to save to a temporary file if response very large, but we assume&#xD;
			// for now the responses will be fairly small&#xD;
			String respXml = FileCopyUtils.copyToString(resp);&#xD;
&#xD;
			log.trace(&quot;Got response XML from URL [{}]:\n{}&quot;, conn.getURL(), respXml);&#xD;
			if ( respXml.length() &lt; 1 ) {&#xD;
				// no data in response... can't be valid so throw IOException&#xD;
				throw new IOException(&quot;Empty response from [&quot; + conn.getURL() + &quot;]&quot;);&#xD;
			}&#xD;
			return new InputSource(new StringReader(respXml));&#xD;
		} finally {&#xD;
			if ( resp != null ) {&#xD;
				try {&#xD;
					resp.close();&#xD;
				} catch ( IOException e ) {&#xD;
					// ignore me&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjoH0OjmEeilbsvZjylwTQ" name="webFormPost" specification="_jiQO0ejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjoH0ejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjoH0ujmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjoH0-jmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjoH1OjmEeilbsvZjylwTQ" type="_jhEjEejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>try {&#xD;
			URLConnection conn = getURLConnection(url, HTTP_METHOD_POST);&#xD;
&#xD;
			OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream(), &quot;UTF-8&quot;);&#xD;
			writeURLEncodedBeanProperties(bean, attributes, out);&#xD;
&#xD;
			return getInputSourceFromURLConnection(conn);&#xD;
		} catch ( IOException e ) {&#xD;
			if ( log.isTraceEnabled() ) {&#xD;
				log.trace(&quot;IOException posting &quot; + bean + &quot; to &quot; + url, e);&#xD;
			} else if ( log.isDebugEnabled() ) {&#xD;
				log.debug(&quot;Unable to post data to &quot; + url + &quot;: &quot; + e.getMessage());&#xD;
			}&#xD;
			throw new RuntimeException(e);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjoH1ejmEeilbsvZjylwTQ" name="writeURLEncodedBeanProperties" specification="_jiRc8ejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjoH1ujmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjoH1-jmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjoH2OjmEeilbsvZjylwTQ" name="out" type="_jg3HsejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>PropertyDescriptor[] props = bean.getPropertyDescriptors();&#xD;
		boolean propsWritten = false;&#xD;
		if ( attributes != null &amp;&amp; attributes.containsKey(ATTR_Edge_ID) ) {&#xD;
			out.write(&quot;EdgeId=&quot; + attributes.get(ATTR_Edge_ID));&#xD;
			propsWritten = true;&#xD;
		}&#xD;
		for ( int i = 0; i &lt; props.length; i++ ) {&#xD;
			PropertyDescriptor prop = props[i];&#xD;
			if ( prop.getReadMethod() == null ) {&#xD;
				continue;&#xD;
			}&#xD;
			String propName = prop.getName();&#xD;
			if ( &quot;class&quot;.equals(propName) ) {&#xD;
				continue;&#xD;
			}&#xD;
			Object propValue = null;&#xD;
			if ( attributes != null &amp;&amp; attributes.containsKey(propName) ) {&#xD;
				propValue = attributes.get(propName);&#xD;
			} else {&#xD;
				PropertyEditor editor = bean.findCustomEditor(prop.getPropertyType(), prop.getName());&#xD;
				if ( editor != null ) {&#xD;
					editor.setValue(bean.getPropertyValue(propName));&#xD;
					propValue = editor.getAsText();&#xD;
				} else {&#xD;
					propValue = bean.getPropertyValue(propName);&#xD;
				}&#xD;
			}&#xD;
			if ( propValue == null ) {&#xD;
				continue;&#xD;
			}&#xD;
			if ( propsWritten ) {&#xD;
				out.write(&quot;&amp;&quot;);&#xD;
			}&#xD;
			out.write(propName);&#xD;
			out.write(&quot;=&quot;);&#xD;
			out.write(URLEncoder.encode(propValue.toString(), &quot;UTF-8&quot;));&#xD;
			propsWritten = true;&#xD;
		}&#xD;
		out.flush();&#xD;
		out.close();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjoH2ejmEeilbsvZjylwTQ" name="webFormGet" specification="_jiSrEejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjoH2ujmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjoH2-jmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjoH3OjmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjoH3ejmEeilbsvZjylwTQ" type="_jhEjEejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>try {&#xD;
			String getUrl = url;&#xD;
			if ( bean != null ) {&#xD;
				StringWriter out = new StringWriter();&#xD;
				writeURLEncodedBeanProperties(bean, attributes, out);&#xD;
				getUrl = getUrl + '?' + out.toString();&#xD;
			}&#xD;
&#xD;
			URLConnection conn = getURLConnection(getUrl, HTTP_METHOD_GET);&#xD;
&#xD;
			return getInputSourceFromURLConnection(conn);&#xD;
		} catch ( IOException e ) {&#xD;
			if ( log.isTraceEnabled() ) {&#xD;
				log.trace(&quot;IOException getting &quot; + bean + &quot; from &quot; + url, e);&#xD;
			} else if ( log.isDebugEnabled() ) {&#xD;
				log.debug(&quot;Unable to get data: &quot; + e.getMessage());&#xD;
			}&#xD;
			throw new RuntimeException(e);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjou4OjmEeilbsvZjylwTQ" name="webFormPostForBean" specification="_jiT5MejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjou4ejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjou4ujmEeilbsvZjylwTQ" name="obj" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjou4-jmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjou5OjmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjou5ejmEeilbsvZjylwTQ" name="xpathMap" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>InputSource is = webFormPost(bean, url, attributes);&#xD;
		Document doc;&#xD;
		try {&#xD;
			doc = getDocBuilderFactory().newDocumentBuilder().parse(is);&#xD;
		} catch ( SAXException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		} catch ( IOException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		} catch ( ParserConfigurationException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		}&#xD;
&#xD;
		extractBeanDataFromXml(obj, doc.getDocumentElement(), xpathMap);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjou5ujmEeilbsvZjylwTQ" name="webFormGetForBean" specification="_jiVuYejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjou5-jmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjou6OjmEeilbsvZjylwTQ" name="obj" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjou6ejmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjou6ujmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjou6-jmEeilbsvZjylwTQ" name="xpathMap" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>InputSource is = webFormGet(bean, url, attributes);&#xD;
		Document doc;&#xD;
		try {&#xD;
			doc = getDocBuilderFactory().newDocumentBuilder().parse(is);&#xD;
		} catch ( SAXException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		} catch ( IOException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		} catch ( ParserConfigurationException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		}&#xD;
&#xD;
		extractBeanDataFromXml(obj, doc.getDocumentElement(), xpathMap);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjou7OjmEeilbsvZjylwTQ" name="extractTrackingId" specification="_jiXjkOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjou7ejmEeilbsvZjylwTQ" name="xml" type="_jhEjEejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjou7ujmEeilbsvZjylwTQ" name="xp" type="_jhA4sejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjou7-jmEeilbsvZjylwTQ" name="xpath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjou8OjmEeilbsvZjylwTQ" type="_jh5pgOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>Double tid;&#xD;
		try {&#xD;
			tid = (Double) xp.evaluate(xml, XPathConstants.NUMBER);&#xD;
		} catch ( XPathExpressionException e ) {&#xD;
			throw new RuntimeException(e);&#xD;
		}&#xD;
		if ( tid.isNaN() ) {&#xD;
			log.warn(&quot;Unable to extract tracking ID via XPath [{}]&quot;, xpath);&#xD;
			return null;&#xD;
		}&#xD;
		return tid.longValue();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjpV8OjmEeilbsvZjylwTQ" name="webFormPostForTrackingId" specification="_jiYKoOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjpV8ejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjpV8ujmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjpV8-jmEeilbsvZjylwTQ" name="trackingIdXPath" type="_jhA4sejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjpV9OjmEeilbsvZjylwTQ" name="xpath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjpV9ejmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjpV9ujmEeilbsvZjylwTQ" type="_jh5pgOjmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>InputSource is = webFormPost(bean, url, attributes);&#xD;
&#xD;
		// extract the returned tracking ID via XPath&#xD;
		return extractTrackingId(is, trackingIdXPath, xpath);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjpV9-jmEeilbsvZjylwTQ" name="addSourceMetadata" specification="_jiZYwejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjpV-OjmEeilbsvZjylwTQ" name="sourceId">
                  <eAnnotations xmi:id="_jjpV-ejmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jjpV-ujmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jjpV--jmEeilbsvZjylwTQ" name="meta" type="_jgVjQejmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jjpV_OjmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jjpV_ejmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jjpV_ujmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( sourceId == null ) {&#xD;
			return false;&#xD;
		}&#xD;
		GeneralDatumMetadata cached = SOURCE_METADATA_CACHE.get(sourceId);&#xD;
		if ( cached != null &amp;&amp; meta.equals(cached) ) {&#xD;
			// we've already posted this metadata... don't bother doing it again&#xD;
			log.debug(&quot;Source {} metadata already added, not posting again&quot;, sourceId);&#xD;
			return true;&#xD;
		}&#xD;
		DatumMetadataService service = null;&#xD;
		if ( datumMetadataService != null ) {&#xD;
			service = datumMetadataService.service();&#xD;
		}&#xD;
		if ( service == null ) {&#xD;
			return false;&#xD;
		}&#xD;
		try {&#xD;
			service.addSourceMetadata(sourceId, meta);&#xD;
			SOURCE_METADATA_CACHE.put(sourceId, meta);&#xD;
			return true;&#xD;
		} catch ( Exception e ) {&#xD;
			log.debug(&quot;Error saving source {} metadata: {}&quot;, sourceId, e.getMessage());&#xD;
		}&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjp9AOjmEeilbsvZjylwTQ" name="postDatumCapturedEvent" specification="_jiam4OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjp9AejmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jjp9AujmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jjp9A-jmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jjp9BOjmEeilbsvZjylwTQ" name="eventDatumType" type="_jhtcQOjmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jjp9BejmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jjp9BujmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <language>java</language>
                <body>postDatumCapturedEvent(datum);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjp9B-jmEeilbsvZjylwTQ" name="createDatumCapturedEvent" specification="_jib1AujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjp9COjmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jjp9CejmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jjp9CujmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jjp9C-jmEeilbsvZjylwTQ" name="eventDatumType" type="_jhtcQOjmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jjp9DOjmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jjp9DejmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jjp9DujmEeilbsvZjylwTQ" type="_jgUVIejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>return createDatumCapturedEvent(datum);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjp9D-jmEeilbsvZjylwTQ" name="postEvent" specification="_jidDI-jmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjp9EOjmEeilbsvZjylwTQ" name="event" type="_jgUVIejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>EventAdmin ea = (eventAdmin == null ? null : eventAdmin.service());&#xD;
		if ( ea == null || event == null ) {&#xD;
			return;&#xD;
		}&#xD;
		ea.postEvent(event);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjqkEOjmEeilbsvZjylwTQ" name="postDatumCapturedEvent" specification="_jidqMOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjqkEejmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>if ( datum == null ) {&#xD;
			return;&#xD;
		}&#xD;
		Event event = createDatumCapturedEvent(datum);&#xD;
		postEvent(event);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjqkEujmEeilbsvZjylwTQ" name="createDatumCapturedEvent" specification="_jieRQOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjqkE-jmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jjqkFOjmEeilbsvZjylwTQ" type="_jgUVIejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>Map&lt;String, ?> props = datum.asSimpleMap();&#xD;
		log.debug(&quot;Created {} event with props {}&quot;, DatumDataSource.EVENT_TOPIC_DATUM_CAPTURED, props);&#xD;
		return new Event(DatumDataSource.EVENT_TOPIC_DATUM_CAPTURED, props);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjqkFejmEeilbsvZjylwTQ" name="getDocBuilderFactory" specification="_jczHEOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjqkFujmEeilbsvZjylwTQ" type="_jg6LAejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>DocumentBuilderFactory f = docBuilderFactory;&#xD;
		if ( f == null ) {&#xD;
			f = DocumentBuilderFactory.newInstance();&#xD;
			f.setNamespaceAware(true);&#xD;
			docBuilderFactory = f;&#xD;
		}&#xD;
		return f;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjqkF-jmEeilbsvZjylwTQ" name="setDocBuilderFactory" specification="_jie4UOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjqkGOjmEeilbsvZjylwTQ" name="docBuilderFactory" type="_jg6LAejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>this.docBuilderFactory = docBuilderFactory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjrLIOjmEeilbsvZjylwTQ" name="getTransformerFactory" specification="_jczuIOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjrLIejmEeilbsvZjylwTQ" type="_jg91YujmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>TransformerFactory f = transformerFactory;&#xD;
		if ( f == null ) {&#xD;
			f = TransformerFactory.newInstance();&#xD;
			transformerFactory = f;&#xD;
		}&#xD;
		return f;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjrLIujmEeilbsvZjylwTQ" name="setTransformerFactory" specification="_jiffYOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjrLI-jmEeilbsvZjylwTQ" name="transformerFactory" type="_jg91YujmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>this.transformerFactory = transformerFactory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjrLJOjmEeilbsvZjylwTQ" name="setEventAdmin" specification="_jiffYujmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjrLJejmEeilbsvZjylwTQ" name="eventAdmin" type="_jgD2cejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>this.eventAdmin = eventAdmin;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjrLJujmEeilbsvZjylwTQ" name="getDatumMetadataService" specification="_jc0VMOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjrLJ-jmEeilbsvZjylwTQ" type="_jgD2cejmEeilbsvZjylwTQ" direction="return"/>
                <language>java</language>
                <body>return datumMetadataService;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jjryMOjmEeilbsvZjylwTQ" name="setDatumMetadataService" specification="_jigtgejmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jjryMejmEeilbsvZjylwTQ" name="datumMetadataService" type="_jgD2cejmEeilbsvZjylwTQ"/>
                <language>java</language>
                <body>this.datumMetadataService = datumMetadataService;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_jcuOkOjmEeilbsvZjylwTQ" name="init" method="_jjXpIejmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjxRxOjmEeilbsvZjylwTQ">
                  <body>Initialize this class after properties are set.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_jczHEOjmEeilbsvZjylwTQ" name="getDocBuilderFactory" method="_jjqkFejmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG8-jmEeilbsvZjylwTQ">
                  <body>Get the DOM factory.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * If an explicit one has not been configured via&#xD;
	 * {@link #setDocBuilderFactory(DocumentBuilderFactory)} then a default one&#xD;
	 * will be instantiated and cached when this method is called.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @return the DOM factory</body>
                </ownedComment>
                <ownedParameter xmi:id="_jieRQ-jmEeilbsvZjylwTQ" type="_jg6LAejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jczuIOjmEeilbsvZjylwTQ" name="getTransformerFactory" method="_jjrLIOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG9ejmEeilbsvZjylwTQ">
                  <body>Get the XSLT factory to use.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * If an expliciy one has not been configured via&#xD;
	 * {@link #setTransformerFactory(TransformerFactory)} then a default one&#xD;
	 * will be created and cached when this method is called.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @return the XSLT factory</body>
                </ownedComment>
                <ownedParameter xmi:id="_jie4UujmEeilbsvZjylwTQ" type="_jg91YujmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jc0VMOjmEeilbsvZjylwTQ" name="getDatumMetadataService" method="_jjrLJujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG-OjmEeilbsvZjylwTQ">
                  <body>Get the configured {@link DatumMetadataService}.&#xD;
	 * &#xD;
	 * @return the service to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_jigtgOjmEeilbsvZjylwTQ" type="_jgD2cejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiHr8OjmEeilbsvZjylwTQ" name="getXPathExpressionMap" visibility="protected" method="_jjXpIujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjxRxejmEeilbsvZjylwTQ">
                  <body>Compile XPathExpression mappings from String XPath expressions.&#xD;
	 * &#xD;
	 * @param xpathMap&#xD;
	 *        the XPath string expressions&#xD;
	 * @return the XPathExperssion mapping</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiHr8ejmEeilbsvZjylwTQ" name="xpathMap" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiITAejmEeilbsvZjylwTQ" type="_jfzXwOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiI6EejmEeilbsvZjylwTQ" name="getTemplates" visibility="protected" method="_jjXpJejmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx40OjmEeilbsvZjylwTQ">
                  <body>Get an XSLT Templates object from an XSLT Resource.&#xD;
	 * &#xD;
	 * @param resource&#xD;
	 *        the XSLT Resource to load&#xD;
	 * @return the compiled Templates</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiI6EujmEeilbsvZjylwTQ" name="resource" type="_jhCt4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiI6E-jmEeilbsvZjylwTQ" type="_jg8AMejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiJhIOjmEeilbsvZjylwTQ" name="getSimpleSource" visibility="protected" method="_jjlrkOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx40ejmEeilbsvZjylwTQ">
                  <body>Turn an object into a simple XML Document.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * The returned XML will be a single element with all JavaBean properties&#xD;
	 * turned into attributed. For example:&#xD;
	 * &lt;p>&#xD;
	 * &#xD;
	 * &lt;pre>&#xD;
	 * &amp;lt;powerDatum&#xD;
	 *   id=&quot;123&quot;&#xD;
	 *   pvVolts=&quot;123.123&quot;&#xD;
	 *   ... /&amp;gt;&#xD;
	 * &lt;/pre>&#xD;
	 * &#xD;
	 * @param o&#xD;
	 *        the object to turn into XML&#xD;
	 * @param elementName&#xD;
	 *        the name of the XML element&#xD;
	 * @return the element, as XSLT Source&#xD;
	 * @see #getSimpleDocument(Object, String)</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiJhIejmEeilbsvZjylwTQ" name="o" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiJhIujmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiJhI-jmEeilbsvZjylwTQ" type="_jg7ZI-jmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiKIMOjmEeilbsvZjylwTQ" name="getSimpleDocument" visibility="protected" method="_jjmSoOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx40ujmEeilbsvZjylwTQ">
                  <body>Turn an object into a simple XML Document.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * The returned XML will be a single element with all JavaBean properties&#xD;
	 * turned into attributes. For example:&#xD;
	 * &lt;p>&#xD;
	 * &#xD;
	 * &lt;pre>&#xD;
	 * &amp;lt;powerDatum&#xD;
	 *   id=&quot;123&quot;&#xD;
	 *   pvVolts=&quot;123.123&quot;&#xD;
	 *   ... /&amp;gt;&#xD;
	 * &lt;/pre>&#xD;
	 * &#xD;
	 * @param o&#xD;
	 *        the object to turn into XML&#xD;
	 * @param elementName&#xD;
	 *        the name of the XML element&#xD;
	 * @return the element, as an XML DOM Document</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiKIMejmEeilbsvZjylwTQ" name="o" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiKIMujmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiKIM-jmEeilbsvZjylwTQ" type="_jhCt4ujmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiKvQOjmEeilbsvZjylwTQ" name="getDocument" visibility="protected" method="_jjmSpOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx40-jmEeilbsvZjylwTQ">
                  <body>Turn an object into a simple XML Document, supporting custom property&#xD;
	 * editors.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * The returned XML will be a document with a single element with all&#xD;
	 * JavaBean properties turned into attributes. For example:&#xD;
	 * &lt;p>&#xD;
	 * &#xD;
	 * &lt;pre>&#xD;
	 * &amp;lt;powerDatum&#xD;
	 *   id=&quot;123&quot;&#xD;
	 *   pvVolts=&quot;123.123&quot;&#xD;
	 *   ... /&amp;gt;&#xD;
	 * &lt;/pre>&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * {@link PropertyEditor} instances can be registered with the supplied&#xD;
	 * {@link BeanWrapper} for custom handling of properties, e.g. dates.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the object to turn into XML&#xD;
	 * @param elementName&#xD;
	 *        the name of the XML element&#xD;
	 * @return the element, as an XML DOM Document</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiKvQejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiKvQujmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiKvQ-jmEeilbsvZjylwTQ" type="_jhCt4ujmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiLWUOjmEeilbsvZjylwTQ" name="getElement" visibility="protected" method="_jjmSqOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx41OjmEeilbsvZjylwTQ">
                  <body>Turn an object into a simple XML Element, supporting custom property&#xD;
	 * editors.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * The returned XML will be a single element with all JavaBean properties&#xD;
	 * turned into attributes and the element named after the bean object's&#xD;
	 * class name. For example:&#xD;
	 * &lt;p>&#xD;
	 * &#xD;
	 * &lt;pre>&#xD;
	 * &amp;lt;PowerDatum&#xD;
	 *   id=&quot;123&quot;&#xD;
	 *   pvVolts=&quot;123.123&quot;&#xD;
	 *   ... /&amp;gt;&#xD;
	 * &lt;/pre>&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * {@link PropertyEditor} instances can be registered with the supplied&#xD;
	 * {@link BeanWrapper} for custom handling of properties, e.g. dates.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the object to turn into XML&#xD;
	 * @return the element, as an XML DOM Document</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiLWUejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiLWUujmEeilbsvZjylwTQ" name="dom" type="_jhCt4ujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiLWU-jmEeilbsvZjylwTQ" type="_jhDU8ejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiL9YOjmEeilbsvZjylwTQ" name="getElement" visibility="protected" method="_jjm5sOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx41ejmEeilbsvZjylwTQ">
                  <body>Turn an object into a simple XML Element, supporting custom property&#xD;
	 * editors.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * The returned XML will be a single element with all JavaBean properties&#xD;
	 * turned into attributes. For example:&#xD;
	 * &lt;p>&#xD;
	 * &#xD;
	 * &lt;pre>&#xD;
	 * &amp;lt;powerDatum&#xD;
	 *   id=&quot;123&quot;&#xD;
	 *   pvVolts=&quot;123.123&quot;&#xD;
	 *   ... /&amp;gt;&#xD;
	 * &lt;/pre>&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * {@link PropertyEditor} instances can be registered with the supplied&#xD;
	 * {@link BeanWrapper} for custom handling of properties, e.g. dates.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the object to turn into XML&#xD;
	 * @param elementName&#xD;
	 *        the name of the XML element&#xD;
	 * @return the element, as an XML DOM Element</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiL9YejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiL9YujmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiL9Y-jmEeilbsvZjylwTQ" name="dom" type="_jhCt4ujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiMkcOjmEeilbsvZjylwTQ" type="_jhDU8ejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiMkcejmEeilbsvZjylwTQ" name="getSource" visibility="protected" method="_jjm5tejmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx41ujmEeilbsvZjylwTQ">
                  <body>Turn an object into a simple XML Document, supporting custom property&#xD;
	 * editors.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * The returned XML will be a single element with all JavaBean properties&#xD;
	 * turned into attributed. For example:&#xD;
	 * &lt;p>&#xD;
	 * &#xD;
	 * &lt;pre>&#xD;
	 * &amp;lt;powerDatum&#xD;
	 *   id=&quot;123&quot;&#xD;
	 *   pvVolts=&quot;123.123&quot;&#xD;
	 *   ... /&amp;gt;&#xD;
	 * &lt;/pre>&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the object to turn into XML&#xD;
	 * @param elementName&#xD;
	 *        the name of the XML element&#xD;
	 * @return the element, as XSLT Source&#xD;
	 * @see #getDocument(BeanWrapper, String)</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiMkcujmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiMkc-jmEeilbsvZjylwTQ" name="elementName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiNLgOjmEeilbsvZjylwTQ" type="_jg7ZI-jmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiNLgejmEeilbsvZjylwTQ" name="getSource" visibility="protected" method="_jjm5uejmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx41-jmEeilbsvZjylwTQ">
                  <body>Turn a Document into a Source.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * This method will log the XML document at the FINEST level.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param dom&#xD;
	 *        the Document to turn into XSLT source&#xD;
	 * @return the document, as XSLT Source</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiNLgujmEeilbsvZjylwTQ" name="dom" type="_jhCt4ujmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiNLg-jmEeilbsvZjylwTQ" type="_jg7ZI-jmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiNykOjmEeilbsvZjylwTQ" name="getXmlAsString" visibility="protected" method="_jjm5vOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx42OjmEeilbsvZjylwTQ">
                  <body>Turn an XML Source into a String.&#xD;
	 * &#xD;
	 * @param source&#xD;
	 *        the XML Source&#xD;
	 * @param indent&#xD;
	 *        if &lt;em>true&lt;/em> then indent the result&#xD;
	 * @return the XML, as a String</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiNykejmEeilbsvZjylwTQ" name="source" type="_jg7ZI-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiNykujmEeilbsvZjylwTQ" name="indent">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiNyk-jmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jiOZoOjmEeilbsvZjylwTQ" name="extractBeanDataFromXml" visibility="protected" method="_jjngwOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjx42ejmEeilbsvZjylwTQ">
                  <body>Populate JavaBean properties via XPath extraction.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * This method will call {@link #registerCustomEditors(BeanWrapper)} so&#xD;
	 * custom editors can be registered if desired.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 *        the object to set properties on, or a BeanWrapper&#xD;
	 * @param xml&#xD;
	 *        the XML&#xD;
	 * @param xpathMap&#xD;
	 *        the mapping of JavaBean property names to XPaths</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiOZoejmEeilbsvZjylwTQ" name="obj" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiOZoujmEeilbsvZjylwTQ" name="xml" type="_jhD8AejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiOZo-jmEeilbsvZjylwTQ" name="xpathMap" type="_jfzXwOjmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiPnwOjmEeilbsvZjylwTQ" name="registerCustomEditors" visibility="protected" method="_jjngxOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjyf4OjmEeilbsvZjylwTQ">
                  <body>Extending classes can override this method to register custom bean&#xD;
	 * editors.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * This method does nothing itself, and is designed to have custom&#xD;
	 * implementation in extending classes.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the bean in question</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiPnwejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiPnwujmEeilbsvZjylwTQ" name="getInputSourceFromURLConnection" visibility="protected" method="_jjngxujmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjyf4ejmEeilbsvZjylwTQ">
                  <body>Get a SAX InputSource from a URLConnection's InputStream.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * This method handles {@code gzip} and {@code deflate} decoding&#xD;
	 * automatically, if the {@code contentType} is reported as such.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param conn&#xD;
	 *        the URLConnection&#xD;
	 * @return the InputSource&#xD;
	 * @throws IOException&#xD;
	 *         if any IO error occurs</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiPnw-jmEeilbsvZjylwTQ" name="conn" type="_jf-W4OjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiQO0OjmEeilbsvZjylwTQ" type="_jhEjEejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiQO0ejmEeilbsvZjylwTQ" name="webFormPost" visibility="protected" method="_jjoH0OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjyf4ujmEeilbsvZjylwTQ">
                  <body>Send a bean as a web form POST and return an XML InputSource from the&#xD;
	 * response content.&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the bean&#xD;
	 * @param url&#xD;
	 *        the URL to POST to&#xD;
	 * @param attributes&#xD;
	 *        extra POST attributes and bean override values&#xD;
	 * @return an InputSource to the response content XML</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiQO0ujmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiQ14OjmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiQ14ejmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiQ14ujmEeilbsvZjylwTQ" type="_jhEjEejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiRc8ejmEeilbsvZjylwTQ" name="writeURLEncodedBeanProperties" visibility="private" method="_jjoH1ejmEeilbsvZjylwTQ" raisedException="_jf1M8OjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jiRc8ujmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiSEAOjmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiSEAejmEeilbsvZjylwTQ" name="out" type="_jg3HsejmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiSrEejmEeilbsvZjylwTQ" name="webFormGet" visibility="protected" method="_jjoH2ejmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjyf4-jmEeilbsvZjylwTQ">
                  <body>Send a bean as a web form GET and return an XML InputSource from the&#xD;
	 * response content.&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the bean to extract GET parameters from, or &lt;em>null&lt;/em> for no&#xD;
	 *        parameters&#xD;
	 * @param url&#xD;
	 *        the URL to GET to&#xD;
	 * @param attributes&#xD;
	 *        extra GET attributes and bean override values&#xD;
	 * @return an InputSource to the response content XML</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiSrEujmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiSrE-jmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiSrFOjmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiTSIOjmEeilbsvZjylwTQ" type="_jhEjEejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiT5MejmEeilbsvZjylwTQ" name="webFormPostForBean" visibility="protected" method="_jjou4OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjyf5OjmEeilbsvZjylwTQ">
                  <body>Send a bean as a web form POST and parse the XML response as bean&#xD;
	 * properties.&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the bean to POST&#xD;
	 * @param obj&#xD;
	 *        the result bean to populate from the HTTP response XML&#xD;
	 * @param url&#xD;
	 *        the URL to POST to&#xD;
	 * @param attributes&#xD;
	 *        extra POST attributes and bean override values&#xD;
	 * @param xpathMap&#xD;
	 *        the mapping of JavaBean property names to XPaths</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiT5MujmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiT5M-jmEeilbsvZjylwTQ" name="obj" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiUgQOjmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiUgQejmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiUgQujmEeilbsvZjylwTQ" name="xpathMap" type="_jfzXwOjmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiVuYejmEeilbsvZjylwTQ" name="webFormGetForBean" visibility="protected" method="_jjou5ujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjyf5ejmEeilbsvZjylwTQ">
                  <body>Send a bean as a web GET and parse the XML response as bean properties.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * This method calls {@link #webFormGet(BeanWrapper, String, Map)} followed&#xD;
	 * by {@link #extractBeanDataFromXml(Object, Edge, Map)}.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the bean whose properties to send as GET parameters, or&#xD;
	 *        &lt;em>null&lt;/em> for no parameters&#xD;
	 * @param obj&#xD;
	 *        the result bean to populate from the HTTP response XML&#xD;
	 * @param url&#xD;
	 *        the URL to GET&#xD;
	 * @param attributes&#xD;
	 *        extra GET attributes and bean override values&#xD;
	 * @param xpathMap&#xD;
	 *        the mapping of JavaBean property names to XPaths&#xD;
	 * @see #webFormGet(BeanWrapper, String, Map)</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiVuYujmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiVuY-jmEeilbsvZjylwTQ" name="obj" type="_jheLsejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiVuZOjmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiVuZejmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiWVcOjmEeilbsvZjylwTQ" name="xpathMap" type="_jfzXwOjmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiXjkOjmEeilbsvZjylwTQ" name="extractTrackingId" visibility="protected" method="_jjou7OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjyf5ujmEeilbsvZjylwTQ">
                  <body>Extract a tracking ID from an XML string.&#xD;
	 * &#xD;
	 * @param xml&#xD;
	 *        the XML to extract from&#xD;
	 * @param xp&#xD;
	 *        the XPath to use that returns a number&#xD;
	 * @param xpath&#xD;
	 *        the XPath as a string (for debugging)&#xD;
	 * @return the tracking ID, or &lt;em>null&lt;/em> if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiXjkejmEeilbsvZjylwTQ" name="xml" type="_jhEjEejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiXjkujmEeilbsvZjylwTQ" name="xp" type="_jhA4sejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiXjk-jmEeilbsvZjylwTQ" name="xpath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiXjlOjmEeilbsvZjylwTQ" type="_jh5pgOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiYKoOjmEeilbsvZjylwTQ" name="webFormPostForTrackingId" visibility="protected" method="_jjpV8OjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjyf5-jmEeilbsvZjylwTQ">
                  <body>Send a bean as a web form POST and parse the XML response for a bean.&#xD;
	 * &#xD;
	 * @param bean&#xD;
	 *        the bean&#xD;
	 * @param url&#xD;
	 *        the URL to POST to&#xD;
	 * @param trackingIdXPath&#xD;
	 *        the XPath for extracting the tracking ID&#xD;
	 * @param xpath&#xD;
	 *        the trackingIdXPath as a String (for debugging)&#xD;
	 * @param attributes&#xD;
	 *        extra POST attributes and bean override values&#xD;
	 * @return the extracted tracking ID, or &lt;em>null&lt;/em> if none found</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiYKoejmEeilbsvZjylwTQ" name="bean" type="_jgiXk-jmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiYxsOjmEeilbsvZjylwTQ" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiYxsejmEeilbsvZjylwTQ" name="trackingIdXPath" type="_jhA4sejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiYxsujmEeilbsvZjylwTQ" name="xpath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiYxs-jmEeilbsvZjylwTQ" name="attributes" type="_jfzXwOjmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jiYxtOjmEeilbsvZjylwTQ" type="_jh5pgOjmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiZYwejmEeilbsvZjylwTQ" name="addSourceMetadata" visibility="protected" method="_jjpV9-jmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjyf6OjmEeilbsvZjylwTQ">
                  <body>Add source metadata using the configured {@link DatumMetadataService} (if&#xD;
	 * available). The metadata will be cached so that subsequent calls to this&#xD;
	 * method with the same metadata value will not try to re-save the unchanged&#xD;
	 * value. This method will catch all exceptions and silently discard them.&#xD;
	 * &#xD;
	 * @param sourceId&#xD;
	 *        the source ID to add metadata to&#xD;
	 * @param meta&#xD;
	 *        the metadata to add&#xD;
	 * @param returns&#xD;
	 *        &lt;em>true&lt;/em> if the metadata was saved successfully, or does not&#xD;
	 *        need to be updated</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiZYwujmEeilbsvZjylwTQ" name="sourceId">
                  <eAnnotations xmi:id="_jiZ_0ujmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jiZ_0-jmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_jiZ_0OjmEeilbsvZjylwTQ" name="meta" type="_jgVjQejmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jiZ_1OjmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jiZ_1ejmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jiZ_0ejmEeilbsvZjylwTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jiam4OjmEeilbsvZjylwTQ" name="postDatumCapturedEvent" visibility="protected" isLeaf="true" method="_jjp9AOjmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jiam4ejmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jiam5OjmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jiam5ejmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jiam4ujmEeilbsvZjylwTQ" name="eventDatumType" type="_jhtcQOjmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jiam5ujmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jibN8OjmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_jib1AujmEeilbsvZjylwTQ" name="createDatumCapturedEvent" visibility="protected" method="_jjp9B-jmEeilbsvZjylwTQ">
                <ownedParameter xmi:id="_jib1A-jmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jiccEejmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jiccEujmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jib1BOjmEeilbsvZjylwTQ" name="eventDatumType" type="_jhtcQOjmEeilbsvZjylwTQ">
                  <eAnnotations xmi:id="_jiccE-jmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_jiccFOjmEeilbsvZjylwTQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_jib1BejmEeilbsvZjylwTQ" type="_jgUVIejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jidDI-jmEeilbsvZjylwTQ" name="postEvent" visibility="protected" isLeaf="true" method="_jjp9D-jmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG8OjmEeilbsvZjylwTQ">
                  <body>Post an {@link Event}.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * This method only works if a {@link EventAdmin} has been configured via&#xD;
	 * {@link #setEventAdmin(OptionalService)}. Otherwise the event is silently&#xD;
	 * ignored.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param event&#xD;
	 *        the event to post&#xD;
	 * @since 1.5</body>
                </ownedComment>
                <ownedParameter xmi:id="_jidDJOjmEeilbsvZjylwTQ" name="event" type="_jgUVIejmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jidqMOjmEeilbsvZjylwTQ" name="postDatumCapturedEvent" visibility="protected" isLeaf="true" method="_jjqkEOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG8ejmEeilbsvZjylwTQ">
                  <body>Post an {@link Event} for the&#xD;
	 * {@link DatumDataSource#EVENT_TOPIC_DATUM_CAPTURED} topic.&#xD;
	 * &#xD;
	 * @param datum&#xD;
	 *        the datum that was stored&#xD;
	 * @since 1.5</body>
                </ownedComment>
                <ownedParameter xmi:id="_jidqMejmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jieRQOjmEeilbsvZjylwTQ" name="createDatumCapturedEvent" visibility="protected" method="_jjqkEujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG8ujmEeilbsvZjylwTQ">
                  <body>Create a new {@link DatumDataSource#EVENT_TOPIC_DATUM_CAPTURED}&#xD;
	 * {@link Event} object out of a {@link Datum}.&#xD;
	 * &#xD;
	 * &lt;p>&#xD;
	 * This method uses the result of {@link Datum#asSimpleMap()} as the event&#xD;
	 * properties.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param datum&#xD;
	 *        the datum to create the event for&#xD;
	 * @return the new Event instance&#xD;
	 * @since 1.5</body>
                </ownedComment>
                <ownedParameter xmi:id="_jieRQejmEeilbsvZjylwTQ" name="datum" type="_jgSf8ejmEeilbsvZjylwTQ"/>
                <ownedParameter xmi:id="_jieRQujmEeilbsvZjylwTQ" type="_jgUVIejmEeilbsvZjylwTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jie4UOjmEeilbsvZjylwTQ" name="setDocBuilderFactory" method="_jjqkF-jmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG9OjmEeilbsvZjylwTQ">
                  <body>Set a JAXP {@link DocumentBuilderFactory} to use.&#xD;
	 * &#xD;
	 * @param docBuilderFactory&#xD;
	 *        the DOM factory to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_jie4UejmEeilbsvZjylwTQ" name="docBuilderFactory" type="_jg6LAejmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiffYOjmEeilbsvZjylwTQ" name="setTransformerFactory" method="_jjrLIujmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG9ujmEeilbsvZjylwTQ">
                  <body>Set a JAXP {@link TransformerFactory} for handling XSLT transformations&#xD;
	 * with.&#xD;
	 * &#xD;
	 * @param transformerFactory&#xD;
	 *        the factory</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiffYejmEeilbsvZjylwTQ" name="transformerFactory" type="_jg91YujmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jiffYujmEeilbsvZjylwTQ" name="setEventAdmin" method="_jjrLJOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG9-jmEeilbsvZjylwTQ">
                  <body>Set an {@link EventAdmin} service to use.&#xD;
	 * &#xD;
	 * @param eventAdmin&#xD;
	 *        the EventAdmin to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_jiffY-jmEeilbsvZjylwTQ" name="eventAdmin" type="_jgD2cejmEeilbsvZjylwTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_jigtgejmEeilbsvZjylwTQ" name="setDatumMetadataService" method="_jjryMOjmEeilbsvZjylwTQ">
                <ownedComment xmi:id="_jjzG-ejmEeilbsvZjylwTQ">
                  <body>Set a {@link DatumMetadataService} to use for managing datum metadata.&#xD;
	 * &#xD;
	 * @param datumMetadataService&#xD;
	 *        the service to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_jigtgujmEeilbsvZjylwTQ" name="datumMetadataService" type="_jgD2cejmEeilbsvZjylwTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jhs1MOjmEeilbsvZjylwTQ" name="T"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_jju1gejmEeilbsvZjylwTQ" name="" memberEnd="_jixzQujmEeilbsvZjylwTQ _jju1gujmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jju1gujmEeilbsvZjylwTQ" name="" type="_jcFVYOjmEeilbsvZjylwTQ" association="_jju1gejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jjxRwujmEeilbsvZjylwTQ" name="" memberEnd="_jjHKcOjmEeilbsvZjylwTQ _jjxRw-jmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jjxRw-jmEeilbsvZjylwTQ" name="" type="_jctAcOjmEeilbsvZjylwTQ" association="_jjxRwujmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj5NkOjmEeilbsvZjylwTQ" name="" memberEnd="_jj5NkejmEeilbsvZjylwTQ _jinbMujmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj5NkejmEeilbsvZjylwTQ" name="" type="_jbsT0OjmEeilbsvZjylwTQ" association="_jj5NkOjmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj50oejmEeilbsvZjylwTQ" name="" memberEnd="_jj50oujmEeilbsvZjylwTQ _jioCQejmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj50oujmEeilbsvZjylwTQ" name="" type="_jbsT0OjmEeilbsvZjylwTQ" association="_jj50oejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj6bsOjmEeilbsvZjylwTQ" name="" memberEnd="_jj6bsejmEeilbsvZjylwTQ _jipQYOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj6bsejmEeilbsvZjylwTQ" name="" type="_jbvXIOjmEeilbsvZjylwTQ" association="_jj6bsOjmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj7CwejmEeilbsvZjylwTQ" name="" memberEnd="_jj7CwujmEeilbsvZjylwTQ _jisTsujmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj7CwujmEeilbsvZjylwTQ" name="" type="_jb3S8OjmEeilbsvZjylwTQ" association="_jj7CwejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj7p0OjmEeilbsvZjylwTQ" name="" memberEnd="_jj7p0ejmEeilbsvZjylwTQ _jis6wOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj7p0ejmEeilbsvZjylwTQ" name="" type="_jb3S8OjmEeilbsvZjylwTQ" association="_jj7p0OjmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj7p0-jmEeilbsvZjylwTQ" name="" memberEnd="_jj7p1OjmEeilbsvZjylwTQ _jiuI4OjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj7p1OjmEeilbsvZjylwTQ" name="" type="_jb3S8OjmEeilbsvZjylwTQ" association="_jj7p0-jmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj8Q4ejmEeilbsvZjylwTQ" name="" memberEnd="_jj8Q4ujmEeilbsvZjylwTQ _jiuv8ujmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj8Q4ujmEeilbsvZjylwTQ" name="" type="_jb_10OjmEeilbsvZjylwTQ" association="_jj8Q4ejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj838ejmEeilbsvZjylwTQ" name="" memberEnd="_jj838ujmEeilbsvZjylwTQ _jiv-EOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj838ujmEeilbsvZjylwTQ" name="" type="_jcFVYOjmEeilbsvZjylwTQ" association="_jj838ejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj9fAejmEeilbsvZjylwTQ" name="" memberEnd="_jj9fAujmEeilbsvZjylwTQ _jixzQ-jmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj9fAujmEeilbsvZjylwTQ" name="" type="_jcFVYOjmEeilbsvZjylwTQ" association="_jj9fAejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj-GEejmEeilbsvZjylwTQ" name="" memberEnd="_jj-GEujmEeilbsvZjylwTQ _jizBYOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj-GEujmEeilbsvZjylwTQ" name="" type="_jcFVYOjmEeilbsvZjylwTQ" association="_jj-GEejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj-tIejmEeilbsvZjylwTQ" name="" memberEnd="_jj-tIujmEeilbsvZjylwTQ _jizocOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj-tIujmEeilbsvZjylwTQ" name="" type="_jcFVYOjmEeilbsvZjylwTQ" association="_jj-tIejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj_UMejmEeilbsvZjylwTQ" name="" memberEnd="_jj_UMujmEeilbsvZjylwTQ _ji1doujmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj_UMujmEeilbsvZjylwTQ" name="" type="_jcMqIOjmEeilbsvZjylwTQ" association="_jj_UMejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jj_7QejmEeilbsvZjylwTQ" name="" memberEnd="_jj_7QujmEeilbsvZjylwTQ _ji2EsejmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jj_7QujmEeilbsvZjylwTQ" name="" type="_jcMqIOjmEeilbsvZjylwTQ" association="_jj_7QejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkAiUejmEeilbsvZjylwTQ" name="" memberEnd="_jkAiUujmEeilbsvZjylwTQ _ji5IAujmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkAiUujmEeilbsvZjylwTQ" name="" type="_jcMqIOjmEeilbsvZjylwTQ" association="_jkAiUejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkBJYejmEeilbsvZjylwTQ" name="" memberEnd="_jkBJYujmEeilbsvZjylwTQ _ji5vEOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkBJYujmEeilbsvZjylwTQ" name="" type="_jcMqIOjmEeilbsvZjylwTQ" association="_jkBJYejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkBwcejmEeilbsvZjylwTQ" name="" memberEnd="_jkBwcujmEeilbsvZjylwTQ _ji69MujmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkBwcujmEeilbsvZjylwTQ" name="" type="_jcMqIOjmEeilbsvZjylwTQ" association="_jkBwcejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkCXgejmEeilbsvZjylwTQ" name="" memberEnd="_jkCXgujmEeilbsvZjylwTQ _ji8LUOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkCXgujmEeilbsvZjylwTQ" name="" type="_jceW8OjmEeilbsvZjylwTQ" association="_jkCXgejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkC-kejmEeilbsvZjylwTQ" name="" memberEnd="_jkC-kujmEeilbsvZjylwTQ _ji_1sOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkC-kujmEeilbsvZjylwTQ" name="" type="_jckdkOjmEeilbsvZjylwTQ" association="_jkC-kejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkDloejmEeilbsvZjylwTQ" name="" memberEnd="_jkDloujmEeilbsvZjylwTQ _jjBD0OjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkDloujmEeilbsvZjylwTQ" name="" type="_jcng4OjmEeilbsvZjylwTQ" association="_jkDloejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkEMsejmEeilbsvZjylwTQ" name="" memberEnd="_jkEMsujmEeilbsvZjylwTQ _jjDgEOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkEMsujmEeilbsvZjylwTQ" name="" type="_jctAcOjmEeilbsvZjylwTQ" association="_jkEMsejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkEzwejmEeilbsvZjylwTQ" name="" memberEnd="_jkEzwujmEeilbsvZjylwTQ _jjEuMejmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkEzwujmEeilbsvZjylwTQ" name="" type="_jctAcOjmEeilbsvZjylwTQ" association="_jkEzwejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkFa0ejmEeilbsvZjylwTQ" name="" memberEnd="_jkFa0ujmEeilbsvZjylwTQ _jjEuM-jmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkFa0ujmEeilbsvZjylwTQ" name="" type="_jctAcOjmEeilbsvZjylwTQ" association="_jkFa0ejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkGB4ejmEeilbsvZjylwTQ" name="" memberEnd="_jkGB4ujmEeilbsvZjylwTQ _jjFVQujmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkGB4ujmEeilbsvZjylwTQ" name="" type="_jctAcOjmEeilbsvZjylwTQ" association="_jkGB4ejmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkGo8OjmEeilbsvZjylwTQ" name="" memberEnd="_jkGo8ejmEeilbsvZjylwTQ _jjGjYOjmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkGo8ejmEeilbsvZjylwTQ" name="" type="_jctAcOjmEeilbsvZjylwTQ" association="_jkGo8OjmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkHQAOjmEeilbsvZjylwTQ" name="" memberEnd="_jkHQAejmEeilbsvZjylwTQ _jjHKcejmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkHQAejmEeilbsvZjylwTQ" name="" type="_jctAcOjmEeilbsvZjylwTQ" association="_jkHQAOjmEeilbsvZjylwTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_jkHQA-jmEeilbsvZjylwTQ" name="" memberEnd="_jkHQBOjmEeilbsvZjylwTQ _jjHxgejmEeilbsvZjylwTQ">
              <ownedEnd xmi:id="_jkHQBOjmEeilbsvZjylwTQ" name="" type="_jctAcOjmEeilbsvZjylwTQ" association="_jkHQA-jmEeilbsvZjylwTQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_jaQwcejmEeilbsvZjylwTQ" name="domain">
            <packagedElement xmi:type="uml:Interface" xmi:id="_jgSf8ejmEeilbsvZjylwTQ" name="Datum"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_jgc4AejmEeilbsvZjylwTQ" name="BasicGeneralLocation"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_jgdfEOjmEeilbsvZjylwTQ" name="GeneralLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_jgdfEujmEeilbsvZjylwTQ" name="GeneralLocationDatum"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_jgeGIejmEeilbsvZjylwTQ" name="GeneralEdgeDatum"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_jgetMejmEeilbsvZjylwTQ" name="Location"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_jgfUQejmEeilbsvZjylwTQ" name="PriceLocation"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_jgf7UejmEeilbsvZjylwTQ" name="PricedDatum"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_jaRXgOjmEeilbsvZjylwTQ" name="settings">
            <packagedElement xmi:type="uml:Package" xmi:id="_jaRXgejmEeilbsvZjylwTQ" name="support">
              <packagedElement xmi:type="uml:Class" xmi:id="_jgTuEejmEeilbsvZjylwTQ" name="BasicTextFieldSettingSpecifier"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_jghwgejmEeilbsvZjylwTQ" name="BasicLocationLookupSettingSpecifier"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_jgxBEejmEeilbsvZjylwTQ" name="BasicToggleSettingSpecifier"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_jgTHAejmEeilbsvZjylwTQ" name="SettingSpecifier"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_jgf7U-jmEeilbsvZjylwTQ" name="KeyedSettingSpecifier"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_jggiYejmEeilbsvZjylwTQ" name="LocationLookupSettingSpecifier"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_jghJcejmEeilbsvZjylwTQ" name="SettingSpecifierProvider"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgBaMejmEeilbsvZjylwTQ" name="IdentityService"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgCBQejmEeilbsvZjylwTQ" name="SSLService"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jgLLMejmEeilbsvZjylwTQ" name="RemoteServiceException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgRR0ejmEeilbsvZjylwTQ" name="DatumDataSource"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgR44ejmEeilbsvZjylwTQ" name="DatumMetadataService"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgR44-jmEeilbsvZjylwTQ" name="Identifiable"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgbp4ejmEeilbsvZjylwTQ" name="LocationService"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgcQ8ejmEeilbsvZjylwTQ" name="MultiDatumDataSource"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgwaAejmEeilbsvZjylwTQ" name="DataCollector"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_jaHmgejmEeilbsvZjylwTQ" name="util">
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgD2cejmEeilbsvZjylwTQ" name="OptionalService"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jgbC0ujmEeilbsvZjylwTQ" name="OptionalServiceTracker"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jhFKI-jmEeilbsvZjylwTQ" name="ClassUtils"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_jaRXhujmEeilbsvZjylwTQ" name="domain">
          <packagedElement xmi:type="uml:Class" xmi:id="_jgVjQejmEeilbsvZjylwTQ" name="GeneralDatumMetadata"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jgbC0OjmEeilbsvZjylwTQ" name="GeneralLocationSourceMetadata"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_jaG_dOjmEeilbsvZjylwTQ" name="slf4j">
        <packagedElement xmi:type="uml:Interface" xmi:id="_jgCoUejmEeilbsvZjylwTQ" name="Logger"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jgDPYOjmEeilbsvZjylwTQ" name="LoggerFactory"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_jaG_dejmEeilbsvZjylwTQ" name="springframework">
        <packagedElement xmi:type="uml:Package" xmi:id="_jaHmgOjmEeilbsvZjylwTQ" name="util">
          <packagedElement xmi:type="uml:Class" xmi:id="_jgDPYujmEeilbsvZjylwTQ" name="FileCopyUtils"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_jaRXhejmEeilbsvZjylwTQ" name="context">
          <packagedElement xmi:type="uml:Package" xmi:id="_jaXeIejmEeilbsvZjylwTQ" name="support">
            <packagedElement xmi:type="uml:Class" xmi:id="_jgjlsejmEeilbsvZjylwTQ" name="ResourceBundleMessageSource"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgU8MejmEeilbsvZjylwTQ" name="MessageSource"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_jaXeIOjmEeilbsvZjylwTQ" name="beans">
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgiXk-jmEeilbsvZjylwTQ" name="BeanWrapper"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jgi-oejmEeilbsvZjylwTQ" name="PropertyAccessorFactory"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_jbAXUOjmEeilbsvZjylwTQ" name="core">
          <packagedElement xmi:type="uml:Package" xmi:id="_jbAXUejmEeilbsvZjylwTQ" name="io">
            <packagedElement xmi:type="uml:Interface" xmi:id="_jhCt4OjmEeilbsvZjylwTQ" name="Resource"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_jaRXgujmEeilbsvZjylwTQ" name="osgi">
        <packagedElement xmi:type="uml:Package" xmi:id="_jaRXg-jmEeilbsvZjylwTQ" name="service">
          <packagedElement xmi:type="uml:Package" xmi:id="_jaRXhOjmEeilbsvZjylwTQ" name="event">
            <packagedElement xmi:type="uml:Class" xmi:id="_jgUVIejmEeilbsvZjylwTQ" name="Event"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_jgUVI-jmEeilbsvZjylwTQ" name="EventAdmin"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ja63wOjmEeilbsvZjylwTQ" name="apache">
        <packagedElement xmi:type="uml:Package" xmi:id="_ja63wejmEeilbsvZjylwTQ" name="commons">
          <packagedElement xmi:type="uml:Package" xmi:id="_ja63wujmEeilbsvZjylwTQ" name="codec">
            <packagedElement xmi:type="uml:Package" xmi:id="_ja63w-jmEeilbsvZjylwTQ" name="binary">
              <packagedElement xmi:type="uml:Class" xmi:id="_jgvy8ejmEeilbsvZjylwTQ" name="Hex"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_jgvL4OjmEeilbsvZjylwTQ" name="DecoderException"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_jbAXUujmEeilbsvZjylwTQ" name="w3c">
        <packagedElement xmi:type="uml:Package" xmi:id="_jbAXU-jmEeilbsvZjylwTQ" name="dom">
          <packagedElement xmi:type="uml:Interface" xmi:id="_jhCt4ujmEeilbsvZjylwTQ" name="Document"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jhDU8ejmEeilbsvZjylwTQ" name="Element"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jhD8AejmEeilbsvZjylwTQ" name="Node"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_jbAXVOjmEeilbsvZjylwTQ" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_jbA-YOjmEeilbsvZjylwTQ" name="sax">
          <packagedElement xmi:type="uml:Class" xmi:id="_jhEjEejmEeilbsvZjylwTQ" name="InputSource"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jhFKIejmEeilbsvZjylwTQ" name="SAXException"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_jZ91gOjmEeilbsvZjylwTQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_jZ91gejmEeilbsvZjylwTQ" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_jaG_cOjmEeilbsvZjylwTQ" name="zip">
          <packagedElement xmi:type="uml:Class" xmi:id="_jf_lAejmEeilbsvZjylwTQ" name="DeflaterInputStream"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jgAMEejmEeilbsvZjylwTQ" name="GZIPInputStream"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jgKkIejmEeilbsvZjylwTQ" name="GZIPOutputStream"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_jaQwcOjmEeilbsvZjylwTQ" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_jgQDsOjmEeilbsvZjylwTQ" name="ConcurrentHashMap"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jgQqwejmEeilbsvZjylwTQ" name="ConcurrentMap"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_jfzXwOjmEeilbsvZjylwTQ" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_jf-98ejmEeilbsvZjylwTQ" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jgJWAejmEeilbsvZjylwTQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_jgJ9EejmEeilbsvZjylwTQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_jgJ9E-jmEeilbsvZjylwTQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jgZ0sOjmEeilbsvZjylwTQ" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_jgabwejmEeilbsvZjylwTQ" name="Set"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_jg4V0ejmEeilbsvZjylwTQ" name="Date"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jg484OjmEeilbsvZjylwTQ" name="LinkedHashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jg484ujmEeilbsvZjylwTQ" name="TimeZone"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_jaCG8OjmEeilbsvZjylwTQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_jf1M8OjmEeilbsvZjylwTQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf10AejmEeilbsvZjylwTQ" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf2bEejmEeilbsvZjylwTQ" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf3CIOjmEeilbsvZjylwTQ" name="PushbackInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf3CIujmEeilbsvZjylwTQ" name="Reader"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_jf43UOjmEeilbsvZjylwTQ" name="Serializable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf7TkOjmEeilbsvZjylwTQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf76oOjmEeilbsvZjylwTQ" name="OutputStreamWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf76oujmEeilbsvZjylwTQ" name="StringReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf8hsejmEeilbsvZjylwTQ" name="UnsupportedEncodingException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jgIu8OjmEeilbsvZjylwTQ" name="OutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jg15kejmEeilbsvZjylwTQ" name="ByteArrayOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jg2goejmEeilbsvZjylwTQ" name="StringWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jg3HsejmEeilbsvZjylwTQ" name="Writer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_jaGYYOjmEeilbsvZjylwTQ" name="net">
        <packagedElement xmi:type="uml:Class" xmi:id="_jf9IwejmEeilbsvZjylwTQ" name="HttpURLConnection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf9v0ejmEeilbsvZjylwTQ" name="URL"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf-W4OjmEeilbsvZjylwTQ" name="URLConnection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jf-W4ujmEeilbsvZjylwTQ" name="URLEncoder"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ja-iIOjmEeilbsvZjylwTQ" name="beans">
        <packagedElement xmi:type="uml:Class" xmi:id="_jg1SgOjmEeilbsvZjylwTQ" name="PropertyDescriptor"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_jg1SgujmEeilbsvZjylwTQ" name="PropertyEditor"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ja_JMOjmEeilbsvZjylwTQ" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_jg3uwejmEeilbsvZjylwTQ" name="SimpleDateFormat"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_jheLsOjmEeilbsvZjylwTQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_jheLsejmEeilbsvZjylwTQ" name="Object"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_jhhPAOjmEeilbsvZjylwTQ" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jhlgcujmEeilbsvZjylwTQ" name="StringBuilder"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jhtcQOjmEeilbsvZjylwTQ" name="Class"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_jh5pgOjmEeilbsvZjylwTQ" name="Long"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_jiBlUOjmEeilbsvZjylwTQ" name="Cloneable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_jaG_cejmEeilbsvZjylwTQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_jaG_cujmEeilbsvZjylwTQ" name="net">
        <packagedElement xmi:type="uml:Package" xmi:id="_jaG_c-jmEeilbsvZjylwTQ" name="ssl">
          <packagedElement xmi:type="uml:Class" xmi:id="_jgAzIOjmEeilbsvZjylwTQ" name="HttpsURLConnection"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jgAzIujmEeilbsvZjylwTQ" name="SSLSocketFactory"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ja_JMejmEeilbsvZjylwTQ" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_ja_JMujmEeilbsvZjylwTQ" name="namespace">
          <packagedElement xmi:type="uml:Interface" xmi:id="_jg5j8ejmEeilbsvZjylwTQ" name="NamespaceContext"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ja_JM-jmEeilbsvZjylwTQ" name="parsers">
          <packagedElement xmi:type="uml:Class" xmi:id="_jg6LAejmEeilbsvZjylwTQ" name="DocumentBuilderFactory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jg6yEejmEeilbsvZjylwTQ" name="ParserConfigurationException"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ja_wQOjmEeilbsvZjylwTQ" name="transform">
          <packagedElement xmi:type="uml:Package" xmi:id="_ja_wQejmEeilbsvZjylwTQ" name="dom">
            <packagedElement xmi:type="uml:Class" xmi:id="_jg-ccejmEeilbsvZjylwTQ" name="DOMSource"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_ja_wQujmEeilbsvZjylwTQ" name="stream">
            <packagedElement xmi:type="uml:Class" xmi:id="_jg_DgejmEeilbsvZjylwTQ" name="StreamResult"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_jg_qkejmEeilbsvZjylwTQ" name="StreamSource"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_jg7ZIejmEeilbsvZjylwTQ" name="OutputKeys"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jg7ZI-jmEeilbsvZjylwTQ" name="Source"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jg8AMejmEeilbsvZjylwTQ" name="Templates"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jg8nQejmEeilbsvZjylwTQ" name="Transformer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jg9OUejmEeilbsvZjylwTQ" name="TransformerConfigurationException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jg91YOjmEeilbsvZjylwTQ" name="TransformerException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jg91YujmEeilbsvZjylwTQ" name="TransformerFactory"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ja_wQ-jmEeilbsvZjylwTQ" name="xpath">
          <packagedElement xmi:type="uml:Interface" xmi:id="_jhARoOjmEeilbsvZjylwTQ" name="XPath"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jhARoujmEeilbsvZjylwTQ" name="XPathConstants"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_jhA4sejmEeilbsvZjylwTQ" name="XPathExpression"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jhBfwejmEeilbsvZjylwTQ" name="XPathExpressionException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jhCG0ejmEeilbsvZjylwTQ" name="XPathFactory"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_jaNGEOjmEeilbsvZjylwTQ" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_jaNGEejmEeilbsvZjylwTQ" name="fasterxml">
        <packagedElement xmi:type="uml:Package" xmi:id="_jaNGEujmEeilbsvZjylwTQ" name="jackson">
          <packagedElement xmi:type="uml:Package" xmi:id="_jaNtIOjmEeilbsvZjylwTQ" name="databind">
            <packagedElement xmi:type="uml:Class" xmi:id="_jgLyQejmEeilbsvZjylwTQ" name="JsonNode"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_jgMZUejmEeilbsvZjylwTQ" name="ObjectMapper"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_i7oTsOjmEeilbsvZjylwTQ">
      <eAnnotations xmi:id="_i7oTsejmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_i7o6wOjmEeilbsvZjylwTQ" base_Package="_idatsOjmEeilbsvZjylwTQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jb1dwOjmEeilbsvZjylwTQ" base_Element="_jb02sOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jb1dwejmEeilbsvZjylwTQ" base_Element="_jb02sOjmEeilbsvZjylwTQ">
    <annotations xmi:id="_jb1dwujmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jb2E0OjmEeilbsvZjylwTQ" base_Element="_jb1dw-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jb2E0ejmEeilbsvZjylwTQ" base_Element="_jb1dw-jmEeilbsvZjylwTQ">
    <annotations xmi:id="_jb2E0ujmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcHxoejmEeilbsvZjylwTQ" base_Element="_jcHKkujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcHxoujmEeilbsvZjylwTQ" base_Element="_jcHKkujmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcHxo-jmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_jcI_wOjmEeilbsvZjylwTQ" genericsValue="DatumMetadataService" base_Element="_jcIYsOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jcNRMOjmEeilbsvZjylwTQ" genericsValue="T extends Datum" base_Element="_jcMqIOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jcPtcOjmEeilbsvZjylwTQ" genericsValue="? extends T" base_Element="_jcPGYOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcPtcejmEeilbsvZjylwTQ" base_Element="_jcPGYOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcQUgOjmEeilbsvZjylwTQ" base_Element="_jcPGYOjmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcQUgejmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_jcQ7kOjmEeilbsvZjylwTQ" genericsValue="? extends T" base_Element="_jcQUgujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcQ7kejmEeilbsvZjylwTQ" base_Element="_jcQUgujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcQ7kujmEeilbsvZjylwTQ" base_Element="_jcQUgujmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcQ7k-jmEeilbsvZjylwTQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_jcRioOjmEeilbsvZjylwTQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_jjwDoujmEeilbsvZjylwTQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_jcRioejmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcSJsOjmEeilbsvZjylwTQ" base_Element="_jcRioujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcSJsejmEeilbsvZjylwTQ" base_Element="_jcRioujmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcSJsujmEeilbsvZjylwTQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_jcSJs-jmEeilbsvZjylwTQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_jjwDo-jmEeilbsvZjylwTQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_jcSJtOjmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcSwwOjmEeilbsvZjylwTQ" base_Element="_jcSJtejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcSwwejmEeilbsvZjylwTQ" base_Element="_jcSJtejmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcSwwujmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcTX0ujmEeilbsvZjylwTQ" base_Element="_jcTX0OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcT-4OjmEeilbsvZjylwTQ" base_Element="_jcTX0OjmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcT-4ejmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcT-5OjmEeilbsvZjylwTQ" base_Element="_jcT-4ujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcUl8OjmEeilbsvZjylwTQ" base_Element="_jcT-4ujmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcUl8ejmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcUl9OjmEeilbsvZjylwTQ" base_Element="_jcUl8ujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcVNAOjmEeilbsvZjylwTQ" base_Element="_jcUl8ujmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcVNAejmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcVNBOjmEeilbsvZjylwTQ" base_Element="_jcVNAujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcV0EOjmEeilbsvZjylwTQ" base_Element="_jcVNAujmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcV0EejmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcV0FOjmEeilbsvZjylwTQ" base_Element="_jcV0EujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcWbIOjmEeilbsvZjylwTQ" base_Element="_jcV0EujmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcWbIejmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcXCMOjmEeilbsvZjylwTQ" base_Element="_jcWbIujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcXCMejmEeilbsvZjylwTQ" base_Element="_jcWbIujmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcXCMujmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jcgzMOjmEeilbsvZjylwTQ" base_Element="_jcgMIOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jcgzMejmEeilbsvZjylwTQ" base_Element="_jcgMIOjmEeilbsvZjylwTQ">
    <annotations xmi:id="_jcgzMujmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_jc08QOjmEeilbsvZjylwTQ" genericsValue="DatumMetadataService" base_Element="_jc0VMOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jfzXwejmEeilbsvZjylwTQ" base_Element="_jfzXwOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jfz-0ejmEeilbsvZjylwTQ" base_Element="_jfz-0OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf10AOjmEeilbsvZjylwTQ" base_Element="_jf1M8OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf2bEOjmEeilbsvZjylwTQ" base_Element="_jf10AejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf2bEujmEeilbsvZjylwTQ" base_Element="_jf2bEejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf3CIejmEeilbsvZjylwTQ" base_Element="_jf3CIOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf3pMOjmEeilbsvZjylwTQ" base_Element="_jf3CIujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf5eYOjmEeilbsvZjylwTQ" base_Element="_jf43UOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf7TkejmEeilbsvZjylwTQ" base_Element="_jf7TkOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf76oejmEeilbsvZjylwTQ" base_Element="_jf76oOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf8hsOjmEeilbsvZjylwTQ" base_Element="_jf76oujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf9IwOjmEeilbsvZjylwTQ" base_Element="_jf8hsejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf9v0OjmEeilbsvZjylwTQ" base_Element="_jf9IwejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf9v0ujmEeilbsvZjylwTQ" base_Element="_jf9v0ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf-W4ejmEeilbsvZjylwTQ" base_Element="_jf-W4OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf-98OjmEeilbsvZjylwTQ" base_Element="_jf-W4ujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jf_lAOjmEeilbsvZjylwTQ" base_Element="_jf-98ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgAMEOjmEeilbsvZjylwTQ" base_Element="_jf_lAejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgAMEujmEeilbsvZjylwTQ" base_Element="_jgAMEejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgAzIejmEeilbsvZjylwTQ" base_Element="_jgAzIOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgBaMOjmEeilbsvZjylwTQ" base_Element="_jgAzIujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgCBQOjmEeilbsvZjylwTQ" base_Element="_jgBaMejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgCoUOjmEeilbsvZjylwTQ" base_Element="_jgCBQejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgCoUujmEeilbsvZjylwTQ" base_Element="_jgCoUejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgDPYejmEeilbsvZjylwTQ" base_Element="_jgDPYOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgD2cOjmEeilbsvZjylwTQ" base_Element="_jgDPYujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgEdgOjmEeilbsvZjylwTQ" base_Element="_jgD2cejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgJWAOjmEeilbsvZjylwTQ" base_Element="_jgIu8OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgJ9EOjmEeilbsvZjylwTQ" base_Element="_jgJWAejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgJ9EujmEeilbsvZjylwTQ" base_Element="_jgJ9EejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgKkIOjmEeilbsvZjylwTQ" base_Element="_jgJ9E-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgLLMOjmEeilbsvZjylwTQ" base_Element="_jgKkIejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgLyQOjmEeilbsvZjylwTQ" base_Element="_jgLLMejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgMZUOjmEeilbsvZjylwTQ" base_Element="_jgLyQejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgMZUujmEeilbsvZjylwTQ" base_Element="_jgMZUejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgQqwOjmEeilbsvZjylwTQ" base_Element="_jgQDsOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgRR0OjmEeilbsvZjylwTQ" base_Element="_jgQqwejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgR44OjmEeilbsvZjylwTQ" base_Element="_jgRR0ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgR44ujmEeilbsvZjylwTQ" base_Element="_jgR44ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgSf8OjmEeilbsvZjylwTQ" base_Element="_jgR44-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgTHAOjmEeilbsvZjylwTQ" base_Element="_jgSf8ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgTuEOjmEeilbsvZjylwTQ" base_Element="_jgTHAejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgUVIOjmEeilbsvZjylwTQ" base_Element="_jgTuEejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgUVIujmEeilbsvZjylwTQ" base_Element="_jgUVIejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgU8MOjmEeilbsvZjylwTQ" base_Element="_jgUVI-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgVjQOjmEeilbsvZjylwTQ" base_Element="_jgU8MejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgWKUOjmEeilbsvZjylwTQ" base_Element="_jgVjQejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgabwOjmEeilbsvZjylwTQ" base_Element="_jgZ0sOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgabwujmEeilbsvZjylwTQ" base_Element="_jgabwejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgbC0ejmEeilbsvZjylwTQ" base_Element="_jgbC0OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgbp4OjmEeilbsvZjylwTQ" base_Element="_jgbC0ujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgcQ8OjmEeilbsvZjylwTQ" base_Element="_jgbp4ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgc4AOjmEeilbsvZjylwTQ" base_Element="_jgcQ8ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgc4AujmEeilbsvZjylwTQ" base_Element="_jgc4AejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgdfEejmEeilbsvZjylwTQ" base_Element="_jgdfEOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgeGIOjmEeilbsvZjylwTQ" base_Element="_jgdfEujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgetMOjmEeilbsvZjylwTQ" base_Element="_jgeGIejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgfUQOjmEeilbsvZjylwTQ" base_Element="_jgetMejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgf7UOjmEeilbsvZjylwTQ" base_Element="_jgfUQejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgf7UujmEeilbsvZjylwTQ" base_Element="_jgf7UejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jggiYOjmEeilbsvZjylwTQ" base_Element="_jgf7U-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jghJcOjmEeilbsvZjylwTQ" base_Element="_jggiYejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jghwgOjmEeilbsvZjylwTQ" base_Element="_jghJcejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgiXkOjmEeilbsvZjylwTQ" base_Element="_jghwgejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgiXkujmEeilbsvZjylwTQ" base_Element="_jgiXkejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgi-oOjmEeilbsvZjylwTQ" base_Element="_jgiXk-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgjlsOjmEeilbsvZjylwTQ" base_Element="_jgi-oejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgkMwOjmEeilbsvZjylwTQ" base_Element="_jgjlsejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgvy8OjmEeilbsvZjylwTQ" base_Element="_jgvL4OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgwaAOjmEeilbsvZjylwTQ" base_Element="_jgvy8ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgxBEOjmEeilbsvZjylwTQ" base_Element="_jgwaAejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jgxoIOjmEeilbsvZjylwTQ" base_Element="_jgxBEejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg1SgejmEeilbsvZjylwTQ" base_Element="_jg1SgOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg15kOjmEeilbsvZjylwTQ" base_Element="_jg1SgujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg2goOjmEeilbsvZjylwTQ" base_Element="_jg15kejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg3HsOjmEeilbsvZjylwTQ" base_Element="_jg2goejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg3uwOjmEeilbsvZjylwTQ" base_Element="_jg3HsejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg4V0OjmEeilbsvZjylwTQ" base_Element="_jg3uwejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg4V0ujmEeilbsvZjylwTQ" base_Element="_jg4V0ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg484ejmEeilbsvZjylwTQ" base_Element="_jg484OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg5j8OjmEeilbsvZjylwTQ" base_Element="_jg484ujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg6LAOjmEeilbsvZjylwTQ" base_Element="_jg5j8ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg6yEOjmEeilbsvZjylwTQ" base_Element="_jg6LAejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg7ZIOjmEeilbsvZjylwTQ" base_Element="_jg6yEejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg7ZIujmEeilbsvZjylwTQ" base_Element="_jg7ZIejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg8AMOjmEeilbsvZjylwTQ" base_Element="_jg7ZI-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg8nQOjmEeilbsvZjylwTQ" base_Element="_jg8AMejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg9OUOjmEeilbsvZjylwTQ" base_Element="_jg8nQejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg9OUujmEeilbsvZjylwTQ" base_Element="_jg9OUejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg91YejmEeilbsvZjylwTQ" base_Element="_jg91YOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg-ccOjmEeilbsvZjylwTQ" base_Element="_jg91YujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg_DgOjmEeilbsvZjylwTQ" base_Element="_jg-ccejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg_qkOjmEeilbsvZjylwTQ" base_Element="_jg_DgejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jg_qkujmEeilbsvZjylwTQ" base_Element="_jg_qkejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhARoejmEeilbsvZjylwTQ" base_Element="_jhARoOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhA4sOjmEeilbsvZjylwTQ" base_Element="_jhARoujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhBfwOjmEeilbsvZjylwTQ" base_Element="_jhA4sejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhCG0OjmEeilbsvZjylwTQ" base_Element="_jhBfwejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhCG0ujmEeilbsvZjylwTQ" base_Element="_jhCG0ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhCt4ejmEeilbsvZjylwTQ" base_Element="_jhCt4OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhDU8OjmEeilbsvZjylwTQ" base_Element="_jhCt4ujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhD8AOjmEeilbsvZjylwTQ" base_Element="_jhDU8ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhEjEOjmEeilbsvZjylwTQ" base_Element="_jhD8AejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhFKIOjmEeilbsvZjylwTQ" base_Element="_jhEjEejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhFKIujmEeilbsvZjylwTQ" base_Element="_jhFKIejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhFxMOjmEeilbsvZjylwTQ" base_Element="_jhFKI-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jheywOjmEeilbsvZjylwTQ" base_Element="_jheLsejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhh2EOjmEeilbsvZjylwTQ" base_Element="_jhhPAOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jhh2EujmEeilbsvZjylwTQ" genericsValue="KeyValuePair" base_Element="_jhh2EejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jhjEMOjmEeilbsvZjylwTQ" base_Element="_jhidIOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jhjEMejmEeilbsvZjylwTQ" base_Element="_jhidIOjmEeilbsvZjylwTQ">
    <annotations xmi:id="_jhjEMujmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_jhmHgOjmEeilbsvZjylwTQ" base_Element="_jhlgcujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jhnVoejmEeilbsvZjylwTQ" genericsValue="String, ?" base_Element="_jhmuk-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jhojwOjmEeilbsvZjylwTQ" genericsValue="String, ?" base_Element="_jhn8s-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jhpx4OjmEeilbsvZjylwTQ" genericsValue="String, ?" base_Element="_jhpK0ujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhs1MejmEeilbsvZjylwTQ" base_Element="_jhs1MOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jhtcQejmEeilbsvZjylwTQ" base_Element="_jhtcQOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_jhuDU-jmEeilbsvZjylwTQ" typeParameterDeclarationValue="T" base_Operation="_jhuDUOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jhuqYOjmEeilbsvZjylwTQ" base_Element="_jhuDUOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jhuqYejmEeilbsvZjylwTQ" genericsValue="T" base_Element="_jhuDUujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_jhv4gOjmEeilbsvZjylwTQ" typeParameterDeclarationValue="T" base_Operation="_jhvRcOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jhv4hejmEeilbsvZjylwTQ" base_Element="_jhvRcOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jhwfkOjmEeilbsvZjylwTQ" genericsValue="T" base_Element="_jhvRcujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jh1YEOjmEeilbsvZjylwTQ" genericsValue="EventAdmin" base_Element="_jh0xAejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jh1_IOjmEeilbsvZjylwTQ" genericsValue="DatumMetadataService" base_Element="_jh1YE-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jh4bYOjmEeilbsvZjylwTQ" genericsValue="T" base_Element="_jh30UOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jh5CcOjmEeilbsvZjylwTQ" genericsValue="T" base_Element="_jh4bYejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jh6QkOjmEeilbsvZjylwTQ" base_Element="_jh5pgOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jh7esOjmEeilbsvZjylwTQ" genericsValue="? extends Datum" base_Element="_jh63oOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jh8FwOjmEeilbsvZjylwTQ" base_Element="_jh63oOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jh8s0OjmEeilbsvZjylwTQ" genericsValue="LocationService" base_Element="_jh63oujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jh8s0ejmEeilbsvZjylwTQ" base_Element="_jh63oOjmEeilbsvZjylwTQ">
    <annotations xmi:id="_jh8s0ujmEeilbsvZjylwTQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_jh8s0-jmEeilbsvZjylwTQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_jjwDoOjmEeilbsvZjylwTQ" value="&quot;rawtypes&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_jjwDoejmEeilbsvZjylwTQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_jiBlUejmEeilbsvZjylwTQ" base_Element="_jiBlUOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiITAOjmEeilbsvZjylwTQ" genericsValue="String, XPathExpression" base_Element="_jiHr8OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiI6EOjmEeilbsvZjylwTQ" genericsValue="String, String" base_Element="_jiHr8ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiPAsOjmEeilbsvZjylwTQ" genericsValue="String, XPathExpression" base_Element="_jiOZo-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiRc8OjmEeilbsvZjylwTQ" genericsValue="String, ?" base_Element="_jiQ14ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiSrEOjmEeilbsvZjylwTQ" genericsValue="String, ?" base_Element="_jiSEAOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiT5MOjmEeilbsvZjylwTQ" genericsValue="String, ?" base_Element="_jiSrFOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiVHUOjmEeilbsvZjylwTQ" genericsValue="String, ?" base_Element="_jiUgQejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiVuYOjmEeilbsvZjylwTQ" genericsValue="String, XPathExpression" base_Element="_jiUgQujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiW8gOjmEeilbsvZjylwTQ" genericsValue="String, ?" base_Element="_jiVuZejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiW8gejmEeilbsvZjylwTQ" genericsValue="String, XPathExpression" base_Element="_jiWVcOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiZYwOjmEeilbsvZjylwTQ" genericsValue="String, ?" base_Element="_jiYxs-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jiam4-jmEeilbsvZjylwTQ" base_Element="_jiam4OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jibN8ejmEeilbsvZjylwTQ" genericsValue="? extends Datum" base_Element="_jiam4ujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jib1AOjmEeilbsvZjylwTQ" base_Element="_jiam4OjmEeilbsvZjylwTQ">
    <annotations xmi:id="_jib1AejmEeilbsvZjylwTQ" name="Deprecated"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jiccEOjmEeilbsvZjylwTQ" base_Element="_jib1AujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jidDIOjmEeilbsvZjylwTQ" genericsValue="? extends Datum" base_Element="_jib1BOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Annotations xmi:id="_jidDIejmEeilbsvZjylwTQ" base_Element="_jib1AujmEeilbsvZjylwTQ">
    <annotations xmi:id="_jidDIujmEeilbsvZjylwTQ" name="Deprecated"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_jigGcOjmEeilbsvZjylwTQ" genericsValue="EventAdmin" base_Element="_jiffY-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jihUkOjmEeilbsvZjylwTQ" genericsValue="DatumMetadataService" base_Element="_jigtgujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jipQYejmEeilbsvZjylwTQ" base_Element="_jipQYOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jis6wejmEeilbsvZjylwTQ" genericsValue="SSLService" base_Element="_jis6wOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jiuI4ujmEeilbsvZjylwTQ" base_Element="_jiuI4OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jiwlIOjmEeilbsvZjylwTQ" genericsValue="String, GeneralDatumMetadata" base_Element="_jiv-EOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jixMMOjmEeilbsvZjylwTQ" base_Element="_jiwlI-jmEeilbsvZjylwTQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_jixMMejmEeilbsvZjylwTQ" name="getGroupUID" method="_jjPtUOjmEeilbsvZjylwTQ">
      <ownedParameter xmi:id="_jixMMujmEeilbsvZjylwTQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_jixzQOjmEeilbsvZjylwTQ" base_Element="_jixMMejmEeilbsvZjylwTQ">
    <annotations xmi:id="_jixzQejmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_jiyaUOjmEeilbsvZjylwTQ" genericsValue="DatumMetadataService" base_Element="_jixzQ-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jiyaUejmEeilbsvZjylwTQ" base_Element="_jixzQ-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jizBYejmEeilbsvZjylwTQ" genericsValue="EventAdmin" base_Element="_jizBYOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jizocujmEeilbsvZjylwTQ" base_Element="_jizocOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_ji2EsOjmEeilbsvZjylwTQ" genericsValue="T" base_Element="_ji1doujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_ji2rwOjmEeilbsvZjylwTQ" genericsValue="LocationService" base_Element="_ji2EsejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ji5vEejmEeilbsvZjylwTQ" base_Element="_ji5vEOjmEeilbsvZjylwTQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ji5vEujmEeilbsvZjylwTQ" name="setMessageSource" method="_jjRigOjmEeilbsvZjylwTQ">
      <ownedParameter xmi:id="_ji5vE-jmEeilbsvZjylwTQ" name="messageSource" type="_jgU8MejmEeilbsvZjylwTQ"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_ji6WIOjmEeilbsvZjylwTQ" name="getMessageSource" method="_jjRigujmEeilbsvZjylwTQ">
      <eAnnotations xmi:id="_ji6WIejmEeilbsvZjylwTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <details xmi:id="_ji6WIujmEeilbsvZjylwTQ" key="synchronized"/>
      </eAnnotations>
      <ownedParameter xmi:id="_ji6WI-jmEeilbsvZjylwTQ" type="_jgU8MejmEeilbsvZjylwTQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_ji69MOjmEeilbsvZjylwTQ" base_Element="_ji6WIOjmEeilbsvZjylwTQ">
    <annotations xmi:id="_ji69MejmEeilbsvZjylwTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ji69NOjmEeilbsvZjylwTQ" base_Element="_ji69MujmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Array xmi:id="_jjBq4ujmEeilbsvZjylwTQ" base_Element="_jjBq4OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Array xmi:id="_jjCR8ejmEeilbsvZjylwTQ" base_Element="_jjBq5OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jjEHIOjmEeilbsvZjylwTQ" genericsValue="String, GeneralDatumMetadata" base_Element="_jjDgEOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jjFVQejmEeilbsvZjylwTQ" base_Element="_jjEuM-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jjFVQ-jmEeilbsvZjylwTQ" base_Element="_jjFVQujmEeilbsvZjylwTQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_jjF8UejmEeilbsvZjylwTQ" name="getXpathFactory" method="_jjXCFujmEeilbsvZjylwTQ">
      <ownedParameter xmi:id="_jjF8VOjmEeilbsvZjylwTQ" type="_jhCG0ejmEeilbsvZjylwTQ" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_jjF8UujmEeilbsvZjylwTQ" name="setXpathFactory" method="_jjXCGOjmEeilbsvZjylwTQ">
      <ownedParameter xmi:id="_jjF8U-jmEeilbsvZjylwTQ" name="xpathFactory" type="_jhCG0ejmEeilbsvZjylwTQ"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jjGjYujmEeilbsvZjylwTQ" base_Element="_jjGjYOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jjHxgOjmEeilbsvZjylwTQ" genericsValue="EventAdmin" base_Element="_jjHKcejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Generics xmi:id="_jjIYkOjmEeilbsvZjylwTQ" genericsValue="DatumMetadataService" base_Element="_jjHxgejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_jjIYkejmEeilbsvZjylwTQ" base_Element="_jjHxgejmEeilbsvZjylwTQ"/>
  <uml:OpaqueBehavior xmi:id="_jjPtUOjmEeilbsvZjylwTQ" name="getGroupUID" specification="_jixMMejmEeilbsvZjylwTQ">
    <ownedParameter xmi:id="_jjPtUejmEeilbsvZjylwTQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return groupUID;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_jjRigOjmEeilbsvZjylwTQ" name="setMessageSource" specification="_ji5vEujmEeilbsvZjylwTQ">
    <ownedParameter xmi:id="_jjRigejmEeilbsvZjylwTQ" name="messageSource" type="_jgU8MejmEeilbsvZjylwTQ"/>
    <language>java</language>
    <body>this.messageSource = messageSource;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_jjRigujmEeilbsvZjylwTQ" name="getMessageSource" specification="_ji6WIOjmEeilbsvZjylwTQ">
    <ownedParameter xmi:id="_jjRig-jmEeilbsvZjylwTQ" type="_jgU8MejmEeilbsvZjylwTQ" direction="return"/>
    <language>java</language>
    <body>if ( messageSource == null ) {
			MessageSource other = null;
			if ( delegate instanceof SettingSpecifierProvider ) {
				other = ((SettingSpecifierProvider) delegate).getMessageSource();
			}
			PrefixedMessageSource delegateSource = null;
			if ( other != null ) {
				delegateSource = new PrefixedMessageSource();
				delegateSource.setDelegate(other);
				delegateSource.setPrefix(&quot;delegate.&quot;);
			}

			ResourceBundleMessageSource proxySource = new ResourceBundleMessageSource();
			proxySource.setBundleClassLoader(getClass().getClassLoader());
			proxySource.setBasename(messageBundleBasename);
			if ( delegateSource != null ) {
				proxySource.setParentMessageSource(delegateSource);
			}

			messageSource = proxySource;
		}
		return messageSource;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_jjXCFujmEeilbsvZjylwTQ" name="getXpathFactory" specification="_jjF8UejmEeilbsvZjylwTQ">
    <ownedParameter xmi:id="_jjXCF-jmEeilbsvZjylwTQ" type="_jhCG0ejmEeilbsvZjylwTQ" direction="return"/>
    <language>java</language>
    <body>XPathFactory f = xpathFactory;&#xD;
		if ( f == null ) {&#xD;
			// work around Oracle JDK issues loading XPathFactory, see&#xD;
			// https://java.net/projects/glassfish/lists/users/archive/2012-02/message/371&#xD;
			final ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();&#xD;
			final ClassLoader newClassLoader = XPathFactory.class.getClassLoader();&#xD;
			if ( newClassLoader != null ) {&#xD;
				Thread.currentThread().setContextClassLoader(newClassLoader);&#xD;
			}&#xD;
			try {&#xD;
				f = XPathFactory.newInstance();&#xD;
				xpathFactory = f;&#xD;
			} finally {&#xD;
				if ( newClassLoader != null ) {&#xD;
					Thread.currentThread().setContextClassLoader(origClassLoader);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return f;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_jjXCGOjmEeilbsvZjylwTQ" name="setXpathFactory" specification="_jjF8UujmEeilbsvZjylwTQ">
    <ownedParameter xmi:id="_jjXpIOjmEeilbsvZjylwTQ" name="xpathFactory" type="_jhCG0ejmEeilbsvZjylwTQ"/>
    <language>java</language>
    <body>this.xpathFactory = xpathFactory;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_jj50oOjmEeilbsvZjylwTQ" base_Element="_jj5NkOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj50o-jmEeilbsvZjylwTQ" base_Element="_jj50oejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj7CwOjmEeilbsvZjylwTQ" base_Element="_jj6bsOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj7Cw-jmEeilbsvZjylwTQ" base_Element="_jj7CwejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj7p0ujmEeilbsvZjylwTQ" base_Element="_jj7p0OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj8Q4OjmEeilbsvZjylwTQ" base_Element="_jj7p0-jmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj838OjmEeilbsvZjylwTQ" base_Element="_jj8Q4ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj9fAOjmEeilbsvZjylwTQ" base_Element="_jj838ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj-GEOjmEeilbsvZjylwTQ" base_Element="_jj9fAejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj-tIOjmEeilbsvZjylwTQ" base_Element="_jj-GEejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj_UMOjmEeilbsvZjylwTQ" base_Element="_jj-tIejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jj_7QOjmEeilbsvZjylwTQ" base_Element="_jj_UMejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkAiUOjmEeilbsvZjylwTQ" base_Element="_jj_7QejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkBJYOjmEeilbsvZjylwTQ" base_Element="_jkAiUejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkBwcOjmEeilbsvZjylwTQ" base_Element="_jkBJYejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkCXgOjmEeilbsvZjylwTQ" base_Element="_jkBwcejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkC-kOjmEeilbsvZjylwTQ" base_Element="_jkCXgejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkDloOjmEeilbsvZjylwTQ" base_Element="_jkC-kejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkEMsOjmEeilbsvZjylwTQ" base_Element="_jkDloejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkEzwOjmEeilbsvZjylwTQ" base_Element="_jkEMsejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkFa0OjmEeilbsvZjylwTQ" base_Element="_jkEzwejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkGB4OjmEeilbsvZjylwTQ" base_Element="_jkFa0ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkGB4-jmEeilbsvZjylwTQ" base_Element="_jkGB4ejmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkGo8ujmEeilbsvZjylwTQ" base_Element="_jkGo8OjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkHQAujmEeilbsvZjylwTQ" base_Element="_jkHQAOjmEeilbsvZjylwTQ"/>
  <UMLLabProfile:Reference xmi:id="_jkH3EOjmEeilbsvZjylwTQ" base_Element="_jkHQA-jmEeilbsvZjylwTQ"/>
</xmi:XMI>
